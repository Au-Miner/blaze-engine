// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blaze.proto

package org.blaze.protobuf;

/**
 * Protobuf type {@code plan.protobuf.AggExecNode}
 */
public final class AggExecNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:plan.protobuf.AggExecNode)
    AggExecNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AggExecNode.newBuilder() to construct.
  private AggExecNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AggExecNode() {
    execMode_ = 0;
    groupingExpr_ = java.util.Collections.emptyList();
    aggExpr_ = java.util.Collections.emptyList();
    mode_ = java.util.Collections.emptyList();
    groupingExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    aggExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AggExecNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_AggExecNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_AggExecNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.blaze.protobuf.AggExecNode.class, org.blaze.protobuf.AggExecNode.Builder.class);
  }

  public static final int INPUT_FIELD_NUMBER = 1;
  private org.blaze.protobuf.PhysicalPlanNode input_;
  /**
   * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
   * @return Whether the input field is set.
   */
  @java.lang.Override
  public boolean hasInput() {
    return input_ != null;
  }
  /**
   * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
   * @return The input.
   */
  @java.lang.Override
  public org.blaze.protobuf.PhysicalPlanNode getInput() {
    return input_ == null ? org.blaze.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
  }
  /**
   * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.PhysicalPlanNodeOrBuilder getInputOrBuilder() {
    return getInput();
  }

  public static final int EXEC_MODE_FIELD_NUMBER = 2;
  private int execMode_;
  /**
   * <code>.plan.protobuf.AggExecMode exec_mode = 2;</code>
   * @return The enum numeric value on the wire for execMode.
   */
  @java.lang.Override public int getExecModeValue() {
    return execMode_;
  }
  /**
   * <code>.plan.protobuf.AggExecMode exec_mode = 2;</code>
   * @return The execMode.
   */
  @java.lang.Override public org.blaze.protobuf.AggExecMode getExecMode() {
    @SuppressWarnings("deprecation")
    org.blaze.protobuf.AggExecMode result = org.blaze.protobuf.AggExecMode.valueOf(execMode_);
    return result == null ? org.blaze.protobuf.AggExecMode.UNRECOGNIZED : result;
  }

  public static final int GROUPING_EXPR_FIELD_NUMBER = 3;
  private java.util.List<org.blaze.protobuf.PhysicalExprNode> groupingExpr_;
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.blaze.protobuf.PhysicalExprNode> getGroupingExprList() {
    return groupingExpr_;
  }
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.blaze.protobuf.PhysicalExprNodeOrBuilder> 
      getGroupingExprOrBuilderList() {
    return groupingExpr_;
  }
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
   */
  @java.lang.Override
  public int getGroupingExprCount() {
    return groupingExpr_.size();
  }
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.PhysicalExprNode getGroupingExpr(int index) {
    return groupingExpr_.get(index);
  }
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.PhysicalExprNodeOrBuilder getGroupingExprOrBuilder(
      int index) {
    return groupingExpr_.get(index);
  }

  public static final int AGG_EXPR_FIELD_NUMBER = 4;
  private java.util.List<org.blaze.protobuf.PhysicalExprNode> aggExpr_;
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
   */
  @java.lang.Override
  public java.util.List<org.blaze.protobuf.PhysicalExprNode> getAggExprList() {
    return aggExpr_;
  }
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.blaze.protobuf.PhysicalExprNodeOrBuilder> 
      getAggExprOrBuilderList() {
    return aggExpr_;
  }
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
   */
  @java.lang.Override
  public int getAggExprCount() {
    return aggExpr_.size();
  }
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.PhysicalExprNode getAggExpr(int index) {
    return aggExpr_.get(index);
  }
  /**
   * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.PhysicalExprNodeOrBuilder getAggExprOrBuilder(
      int index) {
    return aggExpr_.get(index);
  }

  public static final int MODE_FIELD_NUMBER = 5;
  private java.util.List<java.lang.Integer> mode_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, org.blaze.protobuf.AggMode> mode_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, org.blaze.protobuf.AggMode>() {
            public org.blaze.protobuf.AggMode convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              org.blaze.protobuf.AggMode result = org.blaze.protobuf.AggMode.valueOf(from);
              return result == null ? org.blaze.protobuf.AggMode.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
   * @return A list containing the mode.
   */
  @java.lang.Override
  public java.util.List<org.blaze.protobuf.AggMode> getModeList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, org.blaze.protobuf.AggMode>(mode_, mode_converter_);
  }
  /**
   * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
   * @return The count of mode.
   */
  @java.lang.Override
  public int getModeCount() {
    return mode_.size();
  }
  /**
   * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
   * @param index The index of the element to return.
   * @return The mode at the given index.
   */
  @java.lang.Override
  public org.blaze.protobuf.AggMode getMode(int index) {
    return mode_converter_.convert(mode_.get(index));
  }
  /**
   * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
   * @return A list containing the enum numeric values on the wire for mode.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getModeValueList() {
    return mode_;
  }
  /**
   * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of mode at the given index.
   */
  @java.lang.Override
  public int getModeValue(int index) {
    return mode_.get(index);
  }
  private int modeMemoizedSerializedSize;

  public static final int GROUPING_EXPR_NAME_FIELD_NUMBER = 6;
  private com.google.protobuf.LazyStringList groupingExprName_;
  /**
   * <code>repeated string grouping_expr_name = 6;</code>
   * @return A list containing the groupingExprName.
   */
  public com.google.protobuf.ProtocolStringList
      getGroupingExprNameList() {
    return groupingExprName_;
  }
  /**
   * <code>repeated string grouping_expr_name = 6;</code>
   * @return The count of groupingExprName.
   */
  public int getGroupingExprNameCount() {
    return groupingExprName_.size();
  }
  /**
   * <code>repeated string grouping_expr_name = 6;</code>
   * @param index The index of the element to return.
   * @return The groupingExprName at the given index.
   */
  public java.lang.String getGroupingExprName(int index) {
    return groupingExprName_.get(index);
  }
  /**
   * <code>repeated string grouping_expr_name = 6;</code>
   * @param index The index of the value to return.
   * @return The bytes of the groupingExprName at the given index.
   */
  public com.google.protobuf.ByteString
      getGroupingExprNameBytes(int index) {
    return groupingExprName_.getByteString(index);
  }

  public static final int AGG_EXPR_NAME_FIELD_NUMBER = 7;
  private com.google.protobuf.LazyStringList aggExprName_;
  /**
   * <code>repeated string agg_expr_name = 7;</code>
   * @return A list containing the aggExprName.
   */
  public com.google.protobuf.ProtocolStringList
      getAggExprNameList() {
    return aggExprName_;
  }
  /**
   * <code>repeated string agg_expr_name = 7;</code>
   * @return The count of aggExprName.
   */
  public int getAggExprNameCount() {
    return aggExprName_.size();
  }
  /**
   * <code>repeated string agg_expr_name = 7;</code>
   * @param index The index of the element to return.
   * @return The aggExprName at the given index.
   */
  public java.lang.String getAggExprName(int index) {
    return aggExprName_.get(index);
  }
  /**
   * <code>repeated string agg_expr_name = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the aggExprName at the given index.
   */
  public com.google.protobuf.ByteString
      getAggExprNameBytes(int index) {
    return aggExprName_.getByteString(index);
  }

  public static final int INITIAL_INPUT_BUFFER_OFFSET_FIELD_NUMBER = 8;
  private long initialInputBufferOffset_;
  /**
   * <code>uint64 initial_input_buffer_offset = 8;</code>
   * @return The initialInputBufferOffset.
   */
  @java.lang.Override
  public long getInitialInputBufferOffset() {
    return initialInputBufferOffset_;
  }

  public static final int SUPPORTS_PARTIAL_SKIPPING_FIELD_NUMBER = 9;
  private boolean supportsPartialSkipping_;
  /**
   * <code>bool supports_partial_skipping = 9;</code>
   * @return The supportsPartialSkipping.
   */
  @java.lang.Override
  public boolean getSupportsPartialSkipping() {
    return supportsPartialSkipping_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (input_ != null) {
      output.writeMessage(1, getInput());
    }
    if (execMode_ != org.blaze.protobuf.AggExecMode.HASH_AGG.getNumber()) {
      output.writeEnum(2, execMode_);
    }
    for (int i = 0; i < groupingExpr_.size(); i++) {
      output.writeMessage(3, groupingExpr_.get(i));
    }
    for (int i = 0; i < aggExpr_.size(); i++) {
      output.writeMessage(4, aggExpr_.get(i));
    }
    if (getModeList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(modeMemoizedSerializedSize);
    }
    for (int i = 0; i < mode_.size(); i++) {
      output.writeEnumNoTag(mode_.get(i));
    }
    for (int i = 0; i < groupingExprName_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, groupingExprName_.getRaw(i));
    }
    for (int i = 0; i < aggExprName_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, aggExprName_.getRaw(i));
    }
    if (initialInputBufferOffset_ != 0L) {
      output.writeUInt64(8, initialInputBufferOffset_);
    }
    if (supportsPartialSkipping_ != false) {
      output.writeBool(9, supportsPartialSkipping_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (input_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInput());
    }
    if (execMode_ != org.blaze.protobuf.AggExecMode.HASH_AGG.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, execMode_);
    }
    for (int i = 0; i < groupingExpr_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, groupingExpr_.get(i));
    }
    for (int i = 0; i < aggExpr_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, aggExpr_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < mode_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(mode_.get(i));
      }
      size += dataSize;
      if (!getModeList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }modeMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < groupingExprName_.size(); i++) {
        dataSize += computeStringSizeNoTag(groupingExprName_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getGroupingExprNameList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < aggExprName_.size(); i++) {
        dataSize += computeStringSizeNoTag(aggExprName_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAggExprNameList().size();
    }
    if (initialInputBufferOffset_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, initialInputBufferOffset_);
    }
    if (supportsPartialSkipping_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, supportsPartialSkipping_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.blaze.protobuf.AggExecNode)) {
      return super.equals(obj);
    }
    org.blaze.protobuf.AggExecNode other = (org.blaze.protobuf.AggExecNode) obj;

    if (hasInput() != other.hasInput()) return false;
    if (hasInput()) {
      if (!getInput()
          .equals(other.getInput())) return false;
    }
    if (execMode_ != other.execMode_) return false;
    if (!getGroupingExprList()
        .equals(other.getGroupingExprList())) return false;
    if (!getAggExprList()
        .equals(other.getAggExprList())) return false;
    if (!mode_.equals(other.mode_)) return false;
    if (!getGroupingExprNameList()
        .equals(other.getGroupingExprNameList())) return false;
    if (!getAggExprNameList()
        .equals(other.getAggExprNameList())) return false;
    if (getInitialInputBufferOffset()
        != other.getInitialInputBufferOffset()) return false;
    if (getSupportsPartialSkipping()
        != other.getSupportsPartialSkipping()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInput()) {
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getInput().hashCode();
    }
    hash = (37 * hash) + EXEC_MODE_FIELD_NUMBER;
    hash = (53 * hash) + execMode_;
    if (getGroupingExprCount() > 0) {
      hash = (37 * hash) + GROUPING_EXPR_FIELD_NUMBER;
      hash = (53 * hash) + getGroupingExprList().hashCode();
    }
    if (getAggExprCount() > 0) {
      hash = (37 * hash) + AGG_EXPR_FIELD_NUMBER;
      hash = (53 * hash) + getAggExprList().hashCode();
    }
    if (getModeCount() > 0) {
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_.hashCode();
    }
    if (getGroupingExprNameCount() > 0) {
      hash = (37 * hash) + GROUPING_EXPR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getGroupingExprNameList().hashCode();
    }
    if (getAggExprNameCount() > 0) {
      hash = (37 * hash) + AGG_EXPR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getAggExprNameList().hashCode();
    }
    hash = (37 * hash) + INITIAL_INPUT_BUFFER_OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getInitialInputBufferOffset());
    hash = (37 * hash) + SUPPORTS_PARTIAL_SKIPPING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSupportsPartialSkipping());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.blaze.protobuf.AggExecNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.AggExecNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.AggExecNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.AggExecNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.blaze.protobuf.AggExecNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code plan.protobuf.AggExecNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:plan.protobuf.AggExecNode)
      org.blaze.protobuf.AggExecNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_AggExecNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_AggExecNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.blaze.protobuf.AggExecNode.class, org.blaze.protobuf.AggExecNode.Builder.class);
    }

    // Construct using org.blaze.protobuf.AggExecNode.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (inputBuilder_ == null) {
        input_ = null;
      } else {
        input_ = null;
        inputBuilder_ = null;
      }
      execMode_ = 0;

      if (groupingExprBuilder_ == null) {
        groupingExpr_ = java.util.Collections.emptyList();
      } else {
        groupingExpr_ = null;
        groupingExprBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (aggExprBuilder_ == null) {
        aggExpr_ = java.util.Collections.emptyList();
      } else {
        aggExpr_ = null;
        aggExprBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      mode_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      groupingExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      aggExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      initialInputBufferOffset_ = 0L;

      supportsPartialSkipping_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_AggExecNode_descriptor;
    }

    @java.lang.Override
    public org.blaze.protobuf.AggExecNode getDefaultInstanceForType() {
      return org.blaze.protobuf.AggExecNode.getDefaultInstance();
    }

    @java.lang.Override
    public org.blaze.protobuf.AggExecNode build() {
      org.blaze.protobuf.AggExecNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.blaze.protobuf.AggExecNode buildPartial() {
      org.blaze.protobuf.AggExecNode result = new org.blaze.protobuf.AggExecNode(this);
      int from_bitField0_ = bitField0_;
      if (inputBuilder_ == null) {
        result.input_ = input_;
      } else {
        result.input_ = inputBuilder_.build();
      }
      result.execMode_ = execMode_;
      if (groupingExprBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          groupingExpr_ = java.util.Collections.unmodifiableList(groupingExpr_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.groupingExpr_ = groupingExpr_;
      } else {
        result.groupingExpr_ = groupingExprBuilder_.build();
      }
      if (aggExprBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          aggExpr_ = java.util.Collections.unmodifiableList(aggExpr_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.aggExpr_ = aggExpr_;
      } else {
        result.aggExpr_ = aggExprBuilder_.build();
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        mode_ = java.util.Collections.unmodifiableList(mode_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.mode_ = mode_;
      if (((bitField0_ & 0x00000008) != 0)) {
        groupingExprName_ = groupingExprName_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.groupingExprName_ = groupingExprName_;
      if (((bitField0_ & 0x00000010) != 0)) {
        aggExprName_ = aggExprName_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.aggExprName_ = aggExprName_;
      result.initialInputBufferOffset_ = initialInputBufferOffset_;
      result.supportsPartialSkipping_ = supportsPartialSkipping_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.blaze.protobuf.AggExecNode) {
        return mergeFrom((org.blaze.protobuf.AggExecNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.blaze.protobuf.AggExecNode other) {
      if (other == org.blaze.protobuf.AggExecNode.getDefaultInstance()) return this;
      if (other.hasInput()) {
        mergeInput(other.getInput());
      }
      if (other.execMode_ != 0) {
        setExecModeValue(other.getExecModeValue());
      }
      if (groupingExprBuilder_ == null) {
        if (!other.groupingExpr_.isEmpty()) {
          if (groupingExpr_.isEmpty()) {
            groupingExpr_ = other.groupingExpr_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGroupingExprIsMutable();
            groupingExpr_.addAll(other.groupingExpr_);
          }
          onChanged();
        }
      } else {
        if (!other.groupingExpr_.isEmpty()) {
          if (groupingExprBuilder_.isEmpty()) {
            groupingExprBuilder_.dispose();
            groupingExprBuilder_ = null;
            groupingExpr_ = other.groupingExpr_;
            bitField0_ = (bitField0_ & ~0x00000001);
            groupingExprBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGroupingExprFieldBuilder() : null;
          } else {
            groupingExprBuilder_.addAllMessages(other.groupingExpr_);
          }
        }
      }
      if (aggExprBuilder_ == null) {
        if (!other.aggExpr_.isEmpty()) {
          if (aggExpr_.isEmpty()) {
            aggExpr_ = other.aggExpr_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAggExprIsMutable();
            aggExpr_.addAll(other.aggExpr_);
          }
          onChanged();
        }
      } else {
        if (!other.aggExpr_.isEmpty()) {
          if (aggExprBuilder_.isEmpty()) {
            aggExprBuilder_.dispose();
            aggExprBuilder_ = null;
            aggExpr_ = other.aggExpr_;
            bitField0_ = (bitField0_ & ~0x00000002);
            aggExprBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAggExprFieldBuilder() : null;
          } else {
            aggExprBuilder_.addAllMessages(other.aggExpr_);
          }
        }
      }
      if (!other.mode_.isEmpty()) {
        if (mode_.isEmpty()) {
          mode_ = other.mode_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureModeIsMutable();
          mode_.addAll(other.mode_);
        }
        onChanged();
      }
      if (!other.groupingExprName_.isEmpty()) {
        if (groupingExprName_.isEmpty()) {
          groupingExprName_ = other.groupingExprName_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureGroupingExprNameIsMutable();
          groupingExprName_.addAll(other.groupingExprName_);
        }
        onChanged();
      }
      if (!other.aggExprName_.isEmpty()) {
        if (aggExprName_.isEmpty()) {
          aggExprName_ = other.aggExprName_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureAggExprNameIsMutable();
          aggExprName_.addAll(other.aggExprName_);
        }
        onChanged();
      }
      if (other.getInitialInputBufferOffset() != 0L) {
        setInitialInputBufferOffset(other.getInitialInputBufferOffset());
      }
      if (other.getSupportsPartialSkipping() != false) {
        setSupportsPartialSkipping(other.getSupportsPartialSkipping());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getInputFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 10
            case 16: {
              execMode_ = input.readEnum();

              break;
            } // case 16
            case 26: {
              org.blaze.protobuf.PhysicalExprNode m =
                  input.readMessage(
                      org.blaze.protobuf.PhysicalExprNode.parser(),
                      extensionRegistry);
              if (groupingExprBuilder_ == null) {
                ensureGroupingExprIsMutable();
                groupingExpr_.add(m);
              } else {
                groupingExprBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              org.blaze.protobuf.PhysicalExprNode m =
                  input.readMessage(
                      org.blaze.protobuf.PhysicalExprNode.parser(),
                      extensionRegistry);
              if (aggExprBuilder_ == null) {
                ensureAggExprIsMutable();
                aggExpr_.add(m);
              } else {
                aggExprBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 40: {
              int tmpRaw = input.readEnum();
              ensureModeIsMutable();
              mode_.add(tmpRaw);
              break;
            } // case 40
            case 42: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureModeIsMutable();
                mode_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 42
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureGroupingExprNameIsMutable();
              groupingExprName_.add(s);
              break;
            } // case 50
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureAggExprNameIsMutable();
              aggExprName_.add(s);
              break;
            } // case 58
            case 64: {
              initialInputBufferOffset_ = input.readUInt64();

              break;
            } // case 64
            case 72: {
              supportsPartialSkipping_ = input.readBool();

              break;
            } // case 72
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.blaze.protobuf.PhysicalPlanNode input_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.PhysicalPlanNode, org.blaze.protobuf.PhysicalPlanNode.Builder, org.blaze.protobuf.PhysicalPlanNodeOrBuilder> inputBuilder_;
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     * @return Whether the input field is set.
     */
    public boolean hasInput() {
      return inputBuilder_ != null || input_ != null;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     * @return The input.
     */
    public org.blaze.protobuf.PhysicalPlanNode getInput() {
      if (inputBuilder_ == null) {
        return input_ == null ? org.blaze.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
      } else {
        return inputBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder setInput(org.blaze.protobuf.PhysicalPlanNode value) {
      if (inputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        input_ = value;
        onChanged();
      } else {
        inputBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder setInput(
        org.blaze.protobuf.PhysicalPlanNode.Builder builderForValue) {
      if (inputBuilder_ == null) {
        input_ = builderForValue.build();
        onChanged();
      } else {
        inputBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder mergeInput(org.blaze.protobuf.PhysicalPlanNode value) {
      if (inputBuilder_ == null) {
        if (input_ != null) {
          input_ =
            org.blaze.protobuf.PhysicalPlanNode.newBuilder(input_).mergeFrom(value).buildPartial();
        } else {
          input_ = value;
        }
        onChanged();
      } else {
        inputBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder clearInput() {
      if (inputBuilder_ == null) {
        input_ = null;
        onChanged();
      } else {
        input_ = null;
        inputBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public org.blaze.protobuf.PhysicalPlanNode.Builder getInputBuilder() {
      
      onChanged();
      return getInputFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public org.blaze.protobuf.PhysicalPlanNodeOrBuilder getInputOrBuilder() {
      if (inputBuilder_ != null) {
        return inputBuilder_.getMessageOrBuilder();
      } else {
        return input_ == null ?
            org.blaze.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
      }
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.PhysicalPlanNode, org.blaze.protobuf.PhysicalPlanNode.Builder, org.blaze.protobuf.PhysicalPlanNodeOrBuilder> 
        getInputFieldBuilder() {
      if (inputBuilder_ == null) {
        inputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.PhysicalPlanNode, org.blaze.protobuf.PhysicalPlanNode.Builder, org.blaze.protobuf.PhysicalPlanNodeOrBuilder>(
                getInput(),
                getParentForChildren(),
                isClean());
        input_ = null;
      }
      return inputBuilder_;
    }

    private int execMode_ = 0;
    /**
     * <code>.plan.protobuf.AggExecMode exec_mode = 2;</code>
     * @return The enum numeric value on the wire for execMode.
     */
    @java.lang.Override public int getExecModeValue() {
      return execMode_;
    }
    /**
     * <code>.plan.protobuf.AggExecMode exec_mode = 2;</code>
     * @param value The enum numeric value on the wire for execMode to set.
     * @return This builder for chaining.
     */
    public Builder setExecModeValue(int value) {
      
      execMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.plan.protobuf.AggExecMode exec_mode = 2;</code>
     * @return The execMode.
     */
    @java.lang.Override
    public org.blaze.protobuf.AggExecMode getExecMode() {
      @SuppressWarnings("deprecation")
      org.blaze.protobuf.AggExecMode result = org.blaze.protobuf.AggExecMode.valueOf(execMode_);
      return result == null ? org.blaze.protobuf.AggExecMode.UNRECOGNIZED : result;
    }
    /**
     * <code>.plan.protobuf.AggExecMode exec_mode = 2;</code>
     * @param value The execMode to set.
     * @return This builder for chaining.
     */
    public Builder setExecMode(org.blaze.protobuf.AggExecMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      execMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.plan.protobuf.AggExecMode exec_mode = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearExecMode() {
      
      execMode_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<org.blaze.protobuf.PhysicalExprNode> groupingExpr_ =
      java.util.Collections.emptyList();
    private void ensureGroupingExprIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        groupingExpr_ = new java.util.ArrayList<org.blaze.protobuf.PhysicalExprNode>(groupingExpr_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.blaze.protobuf.PhysicalExprNode, org.blaze.protobuf.PhysicalExprNode.Builder, org.blaze.protobuf.PhysicalExprNodeOrBuilder> groupingExprBuilder_;

    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public java.util.List<org.blaze.protobuf.PhysicalExprNode> getGroupingExprList() {
      if (groupingExprBuilder_ == null) {
        return java.util.Collections.unmodifiableList(groupingExpr_);
      } else {
        return groupingExprBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public int getGroupingExprCount() {
      if (groupingExprBuilder_ == null) {
        return groupingExpr_.size();
      } else {
        return groupingExprBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public org.blaze.protobuf.PhysicalExprNode getGroupingExpr(int index) {
      if (groupingExprBuilder_ == null) {
        return groupingExpr_.get(index);
      } else {
        return groupingExprBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder setGroupingExpr(
        int index, org.blaze.protobuf.PhysicalExprNode value) {
      if (groupingExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGroupingExprIsMutable();
        groupingExpr_.set(index, value);
        onChanged();
      } else {
        groupingExprBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder setGroupingExpr(
        int index, org.blaze.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (groupingExprBuilder_ == null) {
        ensureGroupingExprIsMutable();
        groupingExpr_.set(index, builderForValue.build());
        onChanged();
      } else {
        groupingExprBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder addGroupingExpr(org.blaze.protobuf.PhysicalExprNode value) {
      if (groupingExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGroupingExprIsMutable();
        groupingExpr_.add(value);
        onChanged();
      } else {
        groupingExprBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder addGroupingExpr(
        int index, org.blaze.protobuf.PhysicalExprNode value) {
      if (groupingExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGroupingExprIsMutable();
        groupingExpr_.add(index, value);
        onChanged();
      } else {
        groupingExprBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder addGroupingExpr(
        org.blaze.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (groupingExprBuilder_ == null) {
        ensureGroupingExprIsMutable();
        groupingExpr_.add(builderForValue.build());
        onChanged();
      } else {
        groupingExprBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder addGroupingExpr(
        int index, org.blaze.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (groupingExprBuilder_ == null) {
        ensureGroupingExprIsMutable();
        groupingExpr_.add(index, builderForValue.build());
        onChanged();
      } else {
        groupingExprBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder addAllGroupingExpr(
        java.lang.Iterable<? extends org.blaze.protobuf.PhysicalExprNode> values) {
      if (groupingExprBuilder_ == null) {
        ensureGroupingExprIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, groupingExpr_);
        onChanged();
      } else {
        groupingExprBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder clearGroupingExpr() {
      if (groupingExprBuilder_ == null) {
        groupingExpr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        groupingExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public Builder removeGroupingExpr(int index) {
      if (groupingExprBuilder_ == null) {
        ensureGroupingExprIsMutable();
        groupingExpr_.remove(index);
        onChanged();
      } else {
        groupingExprBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public org.blaze.protobuf.PhysicalExprNode.Builder getGroupingExprBuilder(
        int index) {
      return getGroupingExprFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public org.blaze.protobuf.PhysicalExprNodeOrBuilder getGroupingExprOrBuilder(
        int index) {
      if (groupingExprBuilder_ == null) {
        return groupingExpr_.get(index);  } else {
        return groupingExprBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public java.util.List<? extends org.blaze.protobuf.PhysicalExprNodeOrBuilder> 
         getGroupingExprOrBuilderList() {
      if (groupingExprBuilder_ != null) {
        return groupingExprBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(groupingExpr_);
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public org.blaze.protobuf.PhysicalExprNode.Builder addGroupingExprBuilder() {
      return getGroupingExprFieldBuilder().addBuilder(
          org.blaze.protobuf.PhysicalExprNode.getDefaultInstance());
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public org.blaze.protobuf.PhysicalExprNode.Builder addGroupingExprBuilder(
        int index) {
      return getGroupingExprFieldBuilder().addBuilder(
          index, org.blaze.protobuf.PhysicalExprNode.getDefaultInstance());
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode grouping_expr = 3;</code>
     */
    public java.util.List<org.blaze.protobuf.PhysicalExprNode.Builder> 
         getGroupingExprBuilderList() {
      return getGroupingExprFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.blaze.protobuf.PhysicalExprNode, org.blaze.protobuf.PhysicalExprNode.Builder, org.blaze.protobuf.PhysicalExprNodeOrBuilder> 
        getGroupingExprFieldBuilder() {
      if (groupingExprBuilder_ == null) {
        groupingExprBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.blaze.protobuf.PhysicalExprNode, org.blaze.protobuf.PhysicalExprNode.Builder, org.blaze.protobuf.PhysicalExprNodeOrBuilder>(
                groupingExpr_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        groupingExpr_ = null;
      }
      return groupingExprBuilder_;
    }

    private java.util.List<org.blaze.protobuf.PhysicalExprNode> aggExpr_ =
      java.util.Collections.emptyList();
    private void ensureAggExprIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        aggExpr_ = new java.util.ArrayList<org.blaze.protobuf.PhysicalExprNode>(aggExpr_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.blaze.protobuf.PhysicalExprNode, org.blaze.protobuf.PhysicalExprNode.Builder, org.blaze.protobuf.PhysicalExprNodeOrBuilder> aggExprBuilder_;

    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public java.util.List<org.blaze.protobuf.PhysicalExprNode> getAggExprList() {
      if (aggExprBuilder_ == null) {
        return java.util.Collections.unmodifiableList(aggExpr_);
      } else {
        return aggExprBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public int getAggExprCount() {
      if (aggExprBuilder_ == null) {
        return aggExpr_.size();
      } else {
        return aggExprBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public org.blaze.protobuf.PhysicalExprNode getAggExpr(int index) {
      if (aggExprBuilder_ == null) {
        return aggExpr_.get(index);
      } else {
        return aggExprBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder setAggExpr(
        int index, org.blaze.protobuf.PhysicalExprNode value) {
      if (aggExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAggExprIsMutable();
        aggExpr_.set(index, value);
        onChanged();
      } else {
        aggExprBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder setAggExpr(
        int index, org.blaze.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (aggExprBuilder_ == null) {
        ensureAggExprIsMutable();
        aggExpr_.set(index, builderForValue.build());
        onChanged();
      } else {
        aggExprBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder addAggExpr(org.blaze.protobuf.PhysicalExprNode value) {
      if (aggExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAggExprIsMutable();
        aggExpr_.add(value);
        onChanged();
      } else {
        aggExprBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder addAggExpr(
        int index, org.blaze.protobuf.PhysicalExprNode value) {
      if (aggExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAggExprIsMutable();
        aggExpr_.add(index, value);
        onChanged();
      } else {
        aggExprBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder addAggExpr(
        org.blaze.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (aggExprBuilder_ == null) {
        ensureAggExprIsMutable();
        aggExpr_.add(builderForValue.build());
        onChanged();
      } else {
        aggExprBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder addAggExpr(
        int index, org.blaze.protobuf.PhysicalExprNode.Builder builderForValue) {
      if (aggExprBuilder_ == null) {
        ensureAggExprIsMutable();
        aggExpr_.add(index, builderForValue.build());
        onChanged();
      } else {
        aggExprBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder addAllAggExpr(
        java.lang.Iterable<? extends org.blaze.protobuf.PhysicalExprNode> values) {
      if (aggExprBuilder_ == null) {
        ensureAggExprIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aggExpr_);
        onChanged();
      } else {
        aggExprBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder clearAggExpr() {
      if (aggExprBuilder_ == null) {
        aggExpr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        aggExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public Builder removeAggExpr(int index) {
      if (aggExprBuilder_ == null) {
        ensureAggExprIsMutable();
        aggExpr_.remove(index);
        onChanged();
      } else {
        aggExprBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public org.blaze.protobuf.PhysicalExprNode.Builder getAggExprBuilder(
        int index) {
      return getAggExprFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public org.blaze.protobuf.PhysicalExprNodeOrBuilder getAggExprOrBuilder(
        int index) {
      if (aggExprBuilder_ == null) {
        return aggExpr_.get(index);  } else {
        return aggExprBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public java.util.List<? extends org.blaze.protobuf.PhysicalExprNodeOrBuilder> 
         getAggExprOrBuilderList() {
      if (aggExprBuilder_ != null) {
        return aggExprBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(aggExpr_);
      }
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public org.blaze.protobuf.PhysicalExprNode.Builder addAggExprBuilder() {
      return getAggExprFieldBuilder().addBuilder(
          org.blaze.protobuf.PhysicalExprNode.getDefaultInstance());
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public org.blaze.protobuf.PhysicalExprNode.Builder addAggExprBuilder(
        int index) {
      return getAggExprFieldBuilder().addBuilder(
          index, org.blaze.protobuf.PhysicalExprNode.getDefaultInstance());
    }
    /**
     * <code>repeated .plan.protobuf.PhysicalExprNode agg_expr = 4;</code>
     */
    public java.util.List<org.blaze.protobuf.PhysicalExprNode.Builder> 
         getAggExprBuilderList() {
      return getAggExprFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.blaze.protobuf.PhysicalExprNode, org.blaze.protobuf.PhysicalExprNode.Builder, org.blaze.protobuf.PhysicalExprNodeOrBuilder> 
        getAggExprFieldBuilder() {
      if (aggExprBuilder_ == null) {
        aggExprBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.blaze.protobuf.PhysicalExprNode, org.blaze.protobuf.PhysicalExprNode.Builder, org.blaze.protobuf.PhysicalExprNodeOrBuilder>(
                aggExpr_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        aggExpr_ = null;
      }
      return aggExprBuilder_;
    }

    private java.util.List<java.lang.Integer> mode_ =
      java.util.Collections.emptyList();
    private void ensureModeIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        mode_ = new java.util.ArrayList<java.lang.Integer>(mode_);
        bitField0_ |= 0x00000004;
      }
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @return A list containing the mode.
     */
    public java.util.List<org.blaze.protobuf.AggMode> getModeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.blaze.protobuf.AggMode>(mode_, mode_converter_);
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @return The count of mode.
     */
    public int getModeCount() {
      return mode_.size();
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @param index The index of the element to return.
     * @return The mode at the given index.
     */
    public org.blaze.protobuf.AggMode getMode(int index) {
      return mode_converter_.convert(mode_.get(index));
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @param index The index to set the value at.
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(
        int index, org.blaze.protobuf.AggMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureModeIsMutable();
      mode_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @param value The mode to add.
     * @return This builder for chaining.
     */
    public Builder addMode(org.blaze.protobuf.AggMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureModeIsMutable();
      mode_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @param values The mode to add.
     * @return This builder for chaining.
     */
    public Builder addAllMode(
        java.lang.Iterable<? extends org.blaze.protobuf.AggMode> values) {
      ensureModeIsMutable();
      for (org.blaze.protobuf.AggMode value : values) {
        mode_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMode() {
      mode_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @return A list containing the enum numeric values on the wire for mode.
     */
    public java.util.List<java.lang.Integer>
    getModeValueList() {
      return java.util.Collections.unmodifiableList(mode_);
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of mode at the given index.
     */
    public int getModeValue(int index) {
      return mode_.get(index);
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for mode to set.
     * @return This builder for chaining.
     */
    public Builder setModeValue(
        int index, int value) {
      ensureModeIsMutable();
      mode_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @param value The enum numeric value on the wire for mode to add.
     * @return This builder for chaining.
     */
    public Builder addModeValue(int value) {
      ensureModeIsMutable();
      mode_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.AggMode mode = 5;</code>
     * @param values The enum numeric values on the wire for mode to add.
     * @return This builder for chaining.
     */
    public Builder addAllModeValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureModeIsMutable();
      for (int value : values) {
        mode_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList groupingExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureGroupingExprNameIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        groupingExprName_ = new com.google.protobuf.LazyStringArrayList(groupingExprName_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @return A list containing the groupingExprName.
     */
    public com.google.protobuf.ProtocolStringList
        getGroupingExprNameList() {
      return groupingExprName_.getUnmodifiableView();
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @return The count of groupingExprName.
     */
    public int getGroupingExprNameCount() {
      return groupingExprName_.size();
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @param index The index of the element to return.
     * @return The groupingExprName at the given index.
     */
    public java.lang.String getGroupingExprName(int index) {
      return groupingExprName_.get(index);
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the groupingExprName at the given index.
     */
    public com.google.protobuf.ByteString
        getGroupingExprNameBytes(int index) {
      return groupingExprName_.getByteString(index);
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @param index The index to set the value at.
     * @param value The groupingExprName to set.
     * @return This builder for chaining.
     */
    public Builder setGroupingExprName(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureGroupingExprNameIsMutable();
      groupingExprName_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @param value The groupingExprName to add.
     * @return This builder for chaining.
     */
    public Builder addGroupingExprName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureGroupingExprNameIsMutable();
      groupingExprName_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @param values The groupingExprName to add.
     * @return This builder for chaining.
     */
    public Builder addAllGroupingExprName(
        java.lang.Iterable<java.lang.String> values) {
      ensureGroupingExprNameIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, groupingExprName_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupingExprName() {
      groupingExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string grouping_expr_name = 6;</code>
     * @param value The bytes of the groupingExprName to add.
     * @return This builder for chaining.
     */
    public Builder addGroupingExprNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureGroupingExprNameIsMutable();
      groupingExprName_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList aggExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureAggExprNameIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        aggExprName_ = new com.google.protobuf.LazyStringArrayList(aggExprName_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @return A list containing the aggExprName.
     */
    public com.google.protobuf.ProtocolStringList
        getAggExprNameList() {
      return aggExprName_.getUnmodifiableView();
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @return The count of aggExprName.
     */
    public int getAggExprNameCount() {
      return aggExprName_.size();
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @param index The index of the element to return.
     * @return The aggExprName at the given index.
     */
    public java.lang.String getAggExprName(int index) {
      return aggExprName_.get(index);
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the aggExprName at the given index.
     */
    public com.google.protobuf.ByteString
        getAggExprNameBytes(int index) {
      return aggExprName_.getByteString(index);
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @param index The index to set the value at.
     * @param value The aggExprName to set.
     * @return This builder for chaining.
     */
    public Builder setAggExprName(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureAggExprNameIsMutable();
      aggExprName_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @param value The aggExprName to add.
     * @return This builder for chaining.
     */
    public Builder addAggExprName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureAggExprNameIsMutable();
      aggExprName_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @param values The aggExprName to add.
     * @return This builder for chaining.
     */
    public Builder addAllAggExprName(
        java.lang.Iterable<java.lang.String> values) {
      ensureAggExprNameIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, aggExprName_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearAggExprName() {
      aggExprName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string agg_expr_name = 7;</code>
     * @param value The bytes of the aggExprName to add.
     * @return This builder for chaining.
     */
    public Builder addAggExprNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureAggExprNameIsMutable();
      aggExprName_.add(value);
      onChanged();
      return this;
    }

    private long initialInputBufferOffset_ ;
    /**
     * <code>uint64 initial_input_buffer_offset = 8;</code>
     * @return The initialInputBufferOffset.
     */
    @java.lang.Override
    public long getInitialInputBufferOffset() {
      return initialInputBufferOffset_;
    }
    /**
     * <code>uint64 initial_input_buffer_offset = 8;</code>
     * @param value The initialInputBufferOffset to set.
     * @return This builder for chaining.
     */
    public Builder setInitialInputBufferOffset(long value) {
      
      initialInputBufferOffset_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 initial_input_buffer_offset = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearInitialInputBufferOffset() {
      
      initialInputBufferOffset_ = 0L;
      onChanged();
      return this;
    }

    private boolean supportsPartialSkipping_ ;
    /**
     * <code>bool supports_partial_skipping = 9;</code>
     * @return The supportsPartialSkipping.
     */
    @java.lang.Override
    public boolean getSupportsPartialSkipping() {
      return supportsPartialSkipping_;
    }
    /**
     * <code>bool supports_partial_skipping = 9;</code>
     * @param value The supportsPartialSkipping to set.
     * @return This builder for chaining.
     */
    public Builder setSupportsPartialSkipping(boolean value) {
      
      supportsPartialSkipping_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool supports_partial_skipping = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearSupportsPartialSkipping() {
      
      supportsPartialSkipping_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:plan.protobuf.AggExecNode)
  }

  // @@protoc_insertion_point(class_scope:plan.protobuf.AggExecNode)
  private static final org.blaze.protobuf.AggExecNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.blaze.protobuf.AggExecNode();
  }

  public static org.blaze.protobuf.AggExecNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AggExecNode>
      PARSER = new com.google.protobuf.AbstractParser<AggExecNode>() {
    @java.lang.Override
    public AggExecNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AggExecNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AggExecNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.blaze.protobuf.AggExecNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

