// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blaze.proto

package org.blaze.protobuf;

/**
 * Protobuf type {@code plan.protobuf.FileScanExecConf}
 */
public final class FileScanExecConf extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:plan.protobuf.FileScanExecConf)
    FileScanExecConfOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FileScanExecConf.newBuilder() to construct.
  private FileScanExecConf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FileScanExecConf() {
    projection_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FileScanExecConf();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_FileScanExecConf_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_FileScanExecConf_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.blaze.protobuf.FileScanExecConf.class, org.blaze.protobuf.FileScanExecConf.Builder.class);
  }

  public static final int NUM_PARTITIONS_FIELD_NUMBER = 1;
  private long numPartitions_;
  /**
   * <code>int64 num_partitions = 1;</code>
   * @return The numPartitions.
   */
  @java.lang.Override
  public long getNumPartitions() {
    return numPartitions_;
  }

  public static final int PARTITION_INDEX_FIELD_NUMBER = 2;
  private long partitionIndex_;
  /**
   * <code>int64 partition_index = 2;</code>
   * @return The partitionIndex.
   */
  @java.lang.Override
  public long getPartitionIndex() {
    return partitionIndex_;
  }

  public static final int FILE_GROUP_FIELD_NUMBER = 3;
  private org.blaze.protobuf.FileGroup fileGroup_;
  /**
   * <code>.plan.protobuf.FileGroup file_group = 3;</code>
   * @return Whether the fileGroup field is set.
   */
  @java.lang.Override
  public boolean hasFileGroup() {
    return fileGroup_ != null;
  }
  /**
   * <code>.plan.protobuf.FileGroup file_group = 3;</code>
   * @return The fileGroup.
   */
  @java.lang.Override
  public org.blaze.protobuf.FileGroup getFileGroup() {
    return fileGroup_ == null ? org.blaze.protobuf.FileGroup.getDefaultInstance() : fileGroup_;
  }
  /**
   * <code>.plan.protobuf.FileGroup file_group = 3;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.FileGroupOrBuilder getFileGroupOrBuilder() {
    return getFileGroup();
  }

  public static final int SCHEMA_FIELD_NUMBER = 4;
  private org.blaze.protobuf.Schema schema_;
  /**
   * <code>.plan.protobuf.Schema schema = 4;</code>
   * @return Whether the schema field is set.
   */
  @java.lang.Override
  public boolean hasSchema() {
    return schema_ != null;
  }
  /**
   * <code>.plan.protobuf.Schema schema = 4;</code>
   * @return The schema.
   */
  @java.lang.Override
  public org.blaze.protobuf.Schema getSchema() {
    return schema_ == null ? org.blaze.protobuf.Schema.getDefaultInstance() : schema_;
  }
  /**
   * <code>.plan.protobuf.Schema schema = 4;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.SchemaOrBuilder getSchemaOrBuilder() {
    return getSchema();
  }

  public static final int PROJECTION_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.IntList projection_;
  /**
   * <code>repeated uint32 projection = 6;</code>
   * @return A list containing the projection.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getProjectionList() {
    return projection_;
  }
  /**
   * <code>repeated uint32 projection = 6;</code>
   * @return The count of projection.
   */
  public int getProjectionCount() {
    return projection_.size();
  }
  /**
   * <code>repeated uint32 projection = 6;</code>
   * @param index The index of the element to return.
   * @return The projection at the given index.
   */
  public int getProjection(int index) {
    return projection_.getInt(index);
  }
  private int projectionMemoizedSerializedSize = -1;

  public static final int LIMIT_FIELD_NUMBER = 7;
  private org.blaze.protobuf.ScanLimit limit_;
  /**
   * <code>.plan.protobuf.ScanLimit limit = 7;</code>
   * @return Whether the limit field is set.
   */
  @java.lang.Override
  public boolean hasLimit() {
    return limit_ != null;
  }
  /**
   * <code>.plan.protobuf.ScanLimit limit = 7;</code>
   * @return The limit.
   */
  @java.lang.Override
  public org.blaze.protobuf.ScanLimit getLimit() {
    return limit_ == null ? org.blaze.protobuf.ScanLimit.getDefaultInstance() : limit_;
  }
  /**
   * <code>.plan.protobuf.ScanLimit limit = 7;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.ScanLimitOrBuilder getLimitOrBuilder() {
    return getLimit();
  }

  public static final int STATISTICS_FIELD_NUMBER = 8;
  private org.blaze.protobuf.Statistics statistics_;
  /**
   * <code>.plan.protobuf.Statistics statistics = 8;</code>
   * @return Whether the statistics field is set.
   */
  @java.lang.Override
  public boolean hasStatistics() {
    return statistics_ != null;
  }
  /**
   * <code>.plan.protobuf.Statistics statistics = 8;</code>
   * @return The statistics.
   */
  @java.lang.Override
  public org.blaze.protobuf.Statistics getStatistics() {
    return statistics_ == null ? org.blaze.protobuf.Statistics.getDefaultInstance() : statistics_;
  }
  /**
   * <code>.plan.protobuf.Statistics statistics = 8;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.StatisticsOrBuilder getStatisticsOrBuilder() {
    return getStatistics();
  }

  public static final int PARTITION_SCHEMA_FIELD_NUMBER = 9;
  private org.blaze.protobuf.Schema partitionSchema_;
  /**
   * <code>.plan.protobuf.Schema partition_schema = 9;</code>
   * @return Whether the partitionSchema field is set.
   */
  @java.lang.Override
  public boolean hasPartitionSchema() {
    return partitionSchema_ != null;
  }
  /**
   * <code>.plan.protobuf.Schema partition_schema = 9;</code>
   * @return The partitionSchema.
   */
  @java.lang.Override
  public org.blaze.protobuf.Schema getPartitionSchema() {
    return partitionSchema_ == null ? org.blaze.protobuf.Schema.getDefaultInstance() : partitionSchema_;
  }
  /**
   * <code>.plan.protobuf.Schema partition_schema = 9;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.SchemaOrBuilder getPartitionSchemaOrBuilder() {
    return getPartitionSchema();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (numPartitions_ != 0L) {
      output.writeInt64(1, numPartitions_);
    }
    if (partitionIndex_ != 0L) {
      output.writeInt64(2, partitionIndex_);
    }
    if (fileGroup_ != null) {
      output.writeMessage(3, getFileGroup());
    }
    if (schema_ != null) {
      output.writeMessage(4, getSchema());
    }
    if (getProjectionList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(projectionMemoizedSerializedSize);
    }
    for (int i = 0; i < projection_.size(); i++) {
      output.writeUInt32NoTag(projection_.getInt(i));
    }
    if (limit_ != null) {
      output.writeMessage(7, getLimit());
    }
    if (statistics_ != null) {
      output.writeMessage(8, getStatistics());
    }
    if (partitionSchema_ != null) {
      output.writeMessage(9, getPartitionSchema());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (numPartitions_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, numPartitions_);
    }
    if (partitionIndex_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, partitionIndex_);
    }
    if (fileGroup_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getFileGroup());
    }
    if (schema_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSchema());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < projection_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(projection_.getInt(i));
      }
      size += dataSize;
      if (!getProjectionList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      projectionMemoizedSerializedSize = dataSize;
    }
    if (limit_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getLimit());
    }
    if (statistics_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getStatistics());
    }
    if (partitionSchema_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getPartitionSchema());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.blaze.protobuf.FileScanExecConf)) {
      return super.equals(obj);
    }
    org.blaze.protobuf.FileScanExecConf other = (org.blaze.protobuf.FileScanExecConf) obj;

    if (getNumPartitions()
        != other.getNumPartitions()) return false;
    if (getPartitionIndex()
        != other.getPartitionIndex()) return false;
    if (hasFileGroup() != other.hasFileGroup()) return false;
    if (hasFileGroup()) {
      if (!getFileGroup()
          .equals(other.getFileGroup())) return false;
    }
    if (hasSchema() != other.hasSchema()) return false;
    if (hasSchema()) {
      if (!getSchema()
          .equals(other.getSchema())) return false;
    }
    if (!getProjectionList()
        .equals(other.getProjectionList())) return false;
    if (hasLimit() != other.hasLimit()) return false;
    if (hasLimit()) {
      if (!getLimit()
          .equals(other.getLimit())) return false;
    }
    if (hasStatistics() != other.hasStatistics()) return false;
    if (hasStatistics()) {
      if (!getStatistics()
          .equals(other.getStatistics())) return false;
    }
    if (hasPartitionSchema() != other.hasPartitionSchema()) return false;
    if (hasPartitionSchema()) {
      if (!getPartitionSchema()
          .equals(other.getPartitionSchema())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NUM_PARTITIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNumPartitions());
    hash = (37 * hash) + PARTITION_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPartitionIndex());
    if (hasFileGroup()) {
      hash = (37 * hash) + FILE_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getFileGroup().hashCode();
    }
    if (hasSchema()) {
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
    }
    if (getProjectionCount() > 0) {
      hash = (37 * hash) + PROJECTION_FIELD_NUMBER;
      hash = (53 * hash) + getProjectionList().hashCode();
    }
    if (hasLimit()) {
      hash = (37 * hash) + LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getLimit().hashCode();
    }
    if (hasStatistics()) {
      hash = (37 * hash) + STATISTICS_FIELD_NUMBER;
      hash = (53 * hash) + getStatistics().hashCode();
    }
    if (hasPartitionSchema()) {
      hash = (37 * hash) + PARTITION_SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getPartitionSchema().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.blaze.protobuf.FileScanExecConf parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.FileScanExecConf parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.FileScanExecConf parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.FileScanExecConf parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.blaze.protobuf.FileScanExecConf prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code plan.protobuf.FileScanExecConf}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:plan.protobuf.FileScanExecConf)
      org.blaze.protobuf.FileScanExecConfOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_FileScanExecConf_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_FileScanExecConf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.blaze.protobuf.FileScanExecConf.class, org.blaze.protobuf.FileScanExecConf.Builder.class);
    }

    // Construct using org.blaze.protobuf.FileScanExecConf.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      numPartitions_ = 0L;

      partitionIndex_ = 0L;

      if (fileGroupBuilder_ == null) {
        fileGroup_ = null;
      } else {
        fileGroup_ = null;
        fileGroupBuilder_ = null;
      }
      if (schemaBuilder_ == null) {
        schema_ = null;
      } else {
        schema_ = null;
        schemaBuilder_ = null;
      }
      projection_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      if (limitBuilder_ == null) {
        limit_ = null;
      } else {
        limit_ = null;
        limitBuilder_ = null;
      }
      if (statisticsBuilder_ == null) {
        statistics_ = null;
      } else {
        statistics_ = null;
        statisticsBuilder_ = null;
      }
      if (partitionSchemaBuilder_ == null) {
        partitionSchema_ = null;
      } else {
        partitionSchema_ = null;
        partitionSchemaBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_FileScanExecConf_descriptor;
    }

    @java.lang.Override
    public org.blaze.protobuf.FileScanExecConf getDefaultInstanceForType() {
      return org.blaze.protobuf.FileScanExecConf.getDefaultInstance();
    }

    @java.lang.Override
    public org.blaze.protobuf.FileScanExecConf build() {
      org.blaze.protobuf.FileScanExecConf result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.blaze.protobuf.FileScanExecConf buildPartial() {
      org.blaze.protobuf.FileScanExecConf result = new org.blaze.protobuf.FileScanExecConf(this);
      int from_bitField0_ = bitField0_;
      result.numPartitions_ = numPartitions_;
      result.partitionIndex_ = partitionIndex_;
      if (fileGroupBuilder_ == null) {
        result.fileGroup_ = fileGroup_;
      } else {
        result.fileGroup_ = fileGroupBuilder_.build();
      }
      if (schemaBuilder_ == null) {
        result.schema_ = schema_;
      } else {
        result.schema_ = schemaBuilder_.build();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        projection_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.projection_ = projection_;
      if (limitBuilder_ == null) {
        result.limit_ = limit_;
      } else {
        result.limit_ = limitBuilder_.build();
      }
      if (statisticsBuilder_ == null) {
        result.statistics_ = statistics_;
      } else {
        result.statistics_ = statisticsBuilder_.build();
      }
      if (partitionSchemaBuilder_ == null) {
        result.partitionSchema_ = partitionSchema_;
      } else {
        result.partitionSchema_ = partitionSchemaBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.blaze.protobuf.FileScanExecConf) {
        return mergeFrom((org.blaze.protobuf.FileScanExecConf)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.blaze.protobuf.FileScanExecConf other) {
      if (other == org.blaze.protobuf.FileScanExecConf.getDefaultInstance()) return this;
      if (other.getNumPartitions() != 0L) {
        setNumPartitions(other.getNumPartitions());
      }
      if (other.getPartitionIndex() != 0L) {
        setPartitionIndex(other.getPartitionIndex());
      }
      if (other.hasFileGroup()) {
        mergeFileGroup(other.getFileGroup());
      }
      if (other.hasSchema()) {
        mergeSchema(other.getSchema());
      }
      if (!other.projection_.isEmpty()) {
        if (projection_.isEmpty()) {
          projection_ = other.projection_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureProjectionIsMutable();
          projection_.addAll(other.projection_);
        }
        onChanged();
      }
      if (other.hasLimit()) {
        mergeLimit(other.getLimit());
      }
      if (other.hasStatistics()) {
        mergeStatistics(other.getStatistics());
      }
      if (other.hasPartitionSchema()) {
        mergePartitionSchema(other.getPartitionSchema());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              numPartitions_ = input.readInt64();

              break;
            } // case 8
            case 16: {
              partitionIndex_ = input.readInt64();

              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getFileGroupFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getSchemaFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 34
            case 48: {
              int v = input.readUInt32();
              ensureProjectionIsMutable();
              projection_.addInt(v);
              break;
            } // case 48
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureProjectionIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                projection_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getLimitFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getStatisticsFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getPartitionSchemaFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long numPartitions_ ;
    /**
     * <code>int64 num_partitions = 1;</code>
     * @return The numPartitions.
     */
    @java.lang.Override
    public long getNumPartitions() {
      return numPartitions_;
    }
    /**
     * <code>int64 num_partitions = 1;</code>
     * @param value The numPartitions to set.
     * @return This builder for chaining.
     */
    public Builder setNumPartitions(long value) {
      
      numPartitions_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 num_partitions = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumPartitions() {
      
      numPartitions_ = 0L;
      onChanged();
      return this;
    }

    private long partitionIndex_ ;
    /**
     * <code>int64 partition_index = 2;</code>
     * @return The partitionIndex.
     */
    @java.lang.Override
    public long getPartitionIndex() {
      return partitionIndex_;
    }
    /**
     * <code>int64 partition_index = 2;</code>
     * @param value The partitionIndex to set.
     * @return This builder for chaining.
     */
    public Builder setPartitionIndex(long value) {
      
      partitionIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 partition_index = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPartitionIndex() {
      
      partitionIndex_ = 0L;
      onChanged();
      return this;
    }

    private org.blaze.protobuf.FileGroup fileGroup_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.FileGroup, org.blaze.protobuf.FileGroup.Builder, org.blaze.protobuf.FileGroupOrBuilder> fileGroupBuilder_;
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     * @return Whether the fileGroup field is set.
     */
    public boolean hasFileGroup() {
      return fileGroupBuilder_ != null || fileGroup_ != null;
    }
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     * @return The fileGroup.
     */
    public org.blaze.protobuf.FileGroup getFileGroup() {
      if (fileGroupBuilder_ == null) {
        return fileGroup_ == null ? org.blaze.protobuf.FileGroup.getDefaultInstance() : fileGroup_;
      } else {
        return fileGroupBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     */
    public Builder setFileGroup(org.blaze.protobuf.FileGroup value) {
      if (fileGroupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fileGroup_ = value;
        onChanged();
      } else {
        fileGroupBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     */
    public Builder setFileGroup(
        org.blaze.protobuf.FileGroup.Builder builderForValue) {
      if (fileGroupBuilder_ == null) {
        fileGroup_ = builderForValue.build();
        onChanged();
      } else {
        fileGroupBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     */
    public Builder mergeFileGroup(org.blaze.protobuf.FileGroup value) {
      if (fileGroupBuilder_ == null) {
        if (fileGroup_ != null) {
          fileGroup_ =
            org.blaze.protobuf.FileGroup.newBuilder(fileGroup_).mergeFrom(value).buildPartial();
        } else {
          fileGroup_ = value;
        }
        onChanged();
      } else {
        fileGroupBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     */
    public Builder clearFileGroup() {
      if (fileGroupBuilder_ == null) {
        fileGroup_ = null;
        onChanged();
      } else {
        fileGroup_ = null;
        fileGroupBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     */
    public org.blaze.protobuf.FileGroup.Builder getFileGroupBuilder() {
      
      onChanged();
      return getFileGroupFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     */
    public org.blaze.protobuf.FileGroupOrBuilder getFileGroupOrBuilder() {
      if (fileGroupBuilder_ != null) {
        return fileGroupBuilder_.getMessageOrBuilder();
      } else {
        return fileGroup_ == null ?
            org.blaze.protobuf.FileGroup.getDefaultInstance() : fileGroup_;
      }
    }
    /**
     * <code>.plan.protobuf.FileGroup file_group = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.FileGroup, org.blaze.protobuf.FileGroup.Builder, org.blaze.protobuf.FileGroupOrBuilder> 
        getFileGroupFieldBuilder() {
      if (fileGroupBuilder_ == null) {
        fileGroupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.FileGroup, org.blaze.protobuf.FileGroup.Builder, org.blaze.protobuf.FileGroupOrBuilder>(
                getFileGroup(),
                getParentForChildren(),
                isClean());
        fileGroup_ = null;
      }
      return fileGroupBuilder_;
    }

    private org.blaze.protobuf.Schema schema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder> schemaBuilder_;
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     * @return Whether the schema field is set.
     */
    public boolean hasSchema() {
      return schemaBuilder_ != null || schema_ != null;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     * @return The schema.
     */
    public org.blaze.protobuf.Schema getSchema() {
      if (schemaBuilder_ == null) {
        return schema_ == null ? org.blaze.protobuf.Schema.getDefaultInstance() : schema_;
      } else {
        return schemaBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     */
    public Builder setSchema(org.blaze.protobuf.Schema value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        schema_ = value;
        onChanged();
      } else {
        schemaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     */
    public Builder setSchema(
        org.blaze.protobuf.Schema.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        schema_ = builderForValue.build();
        onChanged();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     */
    public Builder mergeSchema(org.blaze.protobuf.Schema value) {
      if (schemaBuilder_ == null) {
        if (schema_ != null) {
          schema_ =
            org.blaze.protobuf.Schema.newBuilder(schema_).mergeFrom(value).buildPartial();
        } else {
          schema_ = value;
        }
        onChanged();
      } else {
        schemaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     */
    public Builder clearSchema() {
      if (schemaBuilder_ == null) {
        schema_ = null;
        onChanged();
      } else {
        schema_ = null;
        schemaBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     */
    public org.blaze.protobuf.Schema.Builder getSchemaBuilder() {
      
      onChanged();
      return getSchemaFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     */
    public org.blaze.protobuf.SchemaOrBuilder getSchemaOrBuilder() {
      if (schemaBuilder_ != null) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        return schema_ == null ?
            org.blaze.protobuf.Schema.getDefaultInstance() : schema_;
      }
    }
    /**
     * <code>.plan.protobuf.Schema schema = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder> 
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder>(
                getSchema(),
                getParentForChildren(),
                isClean());
        schema_ = null;
      }
      return schemaBuilder_;
    }

    private com.google.protobuf.Internal.IntList projection_ = emptyIntList();
    private void ensureProjectionIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        projection_ = mutableCopy(projection_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated uint32 projection = 6;</code>
     * @return A list containing the projection.
     */
    public java.util.List<java.lang.Integer>
        getProjectionList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(projection_) : projection_;
    }
    /**
     * <code>repeated uint32 projection = 6;</code>
     * @return The count of projection.
     */
    public int getProjectionCount() {
      return projection_.size();
    }
    /**
     * <code>repeated uint32 projection = 6;</code>
     * @param index The index of the element to return.
     * @return The projection at the given index.
     */
    public int getProjection(int index) {
      return projection_.getInt(index);
    }
    /**
     * <code>repeated uint32 projection = 6;</code>
     * @param index The index to set the value at.
     * @param value The projection to set.
     * @return This builder for chaining.
     */
    public Builder setProjection(
        int index, int value) {
      ensureProjectionIsMutable();
      projection_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 projection = 6;</code>
     * @param value The projection to add.
     * @return This builder for chaining.
     */
    public Builder addProjection(int value) {
      ensureProjectionIsMutable();
      projection_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 projection = 6;</code>
     * @param values The projection to add.
     * @return This builder for chaining.
     */
    public Builder addAllProjection(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureProjectionIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, projection_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 projection = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearProjection() {
      projection_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private org.blaze.protobuf.ScanLimit limit_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.ScanLimit, org.blaze.protobuf.ScanLimit.Builder, org.blaze.protobuf.ScanLimitOrBuilder> limitBuilder_;
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     * @return Whether the limit field is set.
     */
    public boolean hasLimit() {
      return limitBuilder_ != null || limit_ != null;
    }
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     * @return The limit.
     */
    public org.blaze.protobuf.ScanLimit getLimit() {
      if (limitBuilder_ == null) {
        return limit_ == null ? org.blaze.protobuf.ScanLimit.getDefaultInstance() : limit_;
      } else {
        return limitBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     */
    public Builder setLimit(org.blaze.protobuf.ScanLimit value) {
      if (limitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        limit_ = value;
        onChanged();
      } else {
        limitBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     */
    public Builder setLimit(
        org.blaze.protobuf.ScanLimit.Builder builderForValue) {
      if (limitBuilder_ == null) {
        limit_ = builderForValue.build();
        onChanged();
      } else {
        limitBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     */
    public Builder mergeLimit(org.blaze.protobuf.ScanLimit value) {
      if (limitBuilder_ == null) {
        if (limit_ != null) {
          limit_ =
            org.blaze.protobuf.ScanLimit.newBuilder(limit_).mergeFrom(value).buildPartial();
        } else {
          limit_ = value;
        }
        onChanged();
      } else {
        limitBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     */
    public Builder clearLimit() {
      if (limitBuilder_ == null) {
        limit_ = null;
        onChanged();
      } else {
        limit_ = null;
        limitBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     */
    public org.blaze.protobuf.ScanLimit.Builder getLimitBuilder() {
      
      onChanged();
      return getLimitFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     */
    public org.blaze.protobuf.ScanLimitOrBuilder getLimitOrBuilder() {
      if (limitBuilder_ != null) {
        return limitBuilder_.getMessageOrBuilder();
      } else {
        return limit_ == null ?
            org.blaze.protobuf.ScanLimit.getDefaultInstance() : limit_;
      }
    }
    /**
     * <code>.plan.protobuf.ScanLimit limit = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.ScanLimit, org.blaze.protobuf.ScanLimit.Builder, org.blaze.protobuf.ScanLimitOrBuilder> 
        getLimitFieldBuilder() {
      if (limitBuilder_ == null) {
        limitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.ScanLimit, org.blaze.protobuf.ScanLimit.Builder, org.blaze.protobuf.ScanLimitOrBuilder>(
                getLimit(),
                getParentForChildren(),
                isClean());
        limit_ = null;
      }
      return limitBuilder_;
    }

    private org.blaze.protobuf.Statistics statistics_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.Statistics, org.blaze.protobuf.Statistics.Builder, org.blaze.protobuf.StatisticsOrBuilder> statisticsBuilder_;
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     * @return Whether the statistics field is set.
     */
    public boolean hasStatistics() {
      return statisticsBuilder_ != null || statistics_ != null;
    }
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     * @return The statistics.
     */
    public org.blaze.protobuf.Statistics getStatistics() {
      if (statisticsBuilder_ == null) {
        return statistics_ == null ? org.blaze.protobuf.Statistics.getDefaultInstance() : statistics_;
      } else {
        return statisticsBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     */
    public Builder setStatistics(org.blaze.protobuf.Statistics value) {
      if (statisticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        statistics_ = value;
        onChanged();
      } else {
        statisticsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     */
    public Builder setStatistics(
        org.blaze.protobuf.Statistics.Builder builderForValue) {
      if (statisticsBuilder_ == null) {
        statistics_ = builderForValue.build();
        onChanged();
      } else {
        statisticsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     */
    public Builder mergeStatistics(org.blaze.protobuf.Statistics value) {
      if (statisticsBuilder_ == null) {
        if (statistics_ != null) {
          statistics_ =
            org.blaze.protobuf.Statistics.newBuilder(statistics_).mergeFrom(value).buildPartial();
        } else {
          statistics_ = value;
        }
        onChanged();
      } else {
        statisticsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     */
    public Builder clearStatistics() {
      if (statisticsBuilder_ == null) {
        statistics_ = null;
        onChanged();
      } else {
        statistics_ = null;
        statisticsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     */
    public org.blaze.protobuf.Statistics.Builder getStatisticsBuilder() {
      
      onChanged();
      return getStatisticsFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     */
    public org.blaze.protobuf.StatisticsOrBuilder getStatisticsOrBuilder() {
      if (statisticsBuilder_ != null) {
        return statisticsBuilder_.getMessageOrBuilder();
      } else {
        return statistics_ == null ?
            org.blaze.protobuf.Statistics.getDefaultInstance() : statistics_;
      }
    }
    /**
     * <code>.plan.protobuf.Statistics statistics = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.Statistics, org.blaze.protobuf.Statistics.Builder, org.blaze.protobuf.StatisticsOrBuilder> 
        getStatisticsFieldBuilder() {
      if (statisticsBuilder_ == null) {
        statisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.Statistics, org.blaze.protobuf.Statistics.Builder, org.blaze.protobuf.StatisticsOrBuilder>(
                getStatistics(),
                getParentForChildren(),
                isClean());
        statistics_ = null;
      }
      return statisticsBuilder_;
    }

    private org.blaze.protobuf.Schema partitionSchema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder> partitionSchemaBuilder_;
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     * @return Whether the partitionSchema field is set.
     */
    public boolean hasPartitionSchema() {
      return partitionSchemaBuilder_ != null || partitionSchema_ != null;
    }
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     * @return The partitionSchema.
     */
    public org.blaze.protobuf.Schema getPartitionSchema() {
      if (partitionSchemaBuilder_ == null) {
        return partitionSchema_ == null ? org.blaze.protobuf.Schema.getDefaultInstance() : partitionSchema_;
      } else {
        return partitionSchemaBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     */
    public Builder setPartitionSchema(org.blaze.protobuf.Schema value) {
      if (partitionSchemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        partitionSchema_ = value;
        onChanged();
      } else {
        partitionSchemaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     */
    public Builder setPartitionSchema(
        org.blaze.protobuf.Schema.Builder builderForValue) {
      if (partitionSchemaBuilder_ == null) {
        partitionSchema_ = builderForValue.build();
        onChanged();
      } else {
        partitionSchemaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     */
    public Builder mergePartitionSchema(org.blaze.protobuf.Schema value) {
      if (partitionSchemaBuilder_ == null) {
        if (partitionSchema_ != null) {
          partitionSchema_ =
            org.blaze.protobuf.Schema.newBuilder(partitionSchema_).mergeFrom(value).buildPartial();
        } else {
          partitionSchema_ = value;
        }
        onChanged();
      } else {
        partitionSchemaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     */
    public Builder clearPartitionSchema() {
      if (partitionSchemaBuilder_ == null) {
        partitionSchema_ = null;
        onChanged();
      } else {
        partitionSchema_ = null;
        partitionSchemaBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     */
    public org.blaze.protobuf.Schema.Builder getPartitionSchemaBuilder() {
      
      onChanged();
      return getPartitionSchemaFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     */
    public org.blaze.protobuf.SchemaOrBuilder getPartitionSchemaOrBuilder() {
      if (partitionSchemaBuilder_ != null) {
        return partitionSchemaBuilder_.getMessageOrBuilder();
      } else {
        return partitionSchema_ == null ?
            org.blaze.protobuf.Schema.getDefaultInstance() : partitionSchema_;
      }
    }
    /**
     * <code>.plan.protobuf.Schema partition_schema = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder> 
        getPartitionSchemaFieldBuilder() {
      if (partitionSchemaBuilder_ == null) {
        partitionSchemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder>(
                getPartitionSchema(),
                getParentForChildren(),
                isClean());
        partitionSchema_ = null;
      }
      return partitionSchemaBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:plan.protobuf.FileScanExecConf)
  }

  // @@protoc_insertion_point(class_scope:plan.protobuf.FileScanExecConf)
  private static final org.blaze.protobuf.FileScanExecConf DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.blaze.protobuf.FileScanExecConf();
  }

  public static org.blaze.protobuf.FileScanExecConf getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FileScanExecConf>
      PARSER = new com.google.protobuf.AbstractParser<FileScanExecConf>() {
    @java.lang.Override
    public FileScanExecConf parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<FileScanExecConf> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FileScanExecConf> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.blaze.protobuf.FileScanExecConf getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

