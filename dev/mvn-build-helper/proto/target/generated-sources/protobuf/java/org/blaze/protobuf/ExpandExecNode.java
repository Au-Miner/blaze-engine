// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blaze.proto

package org.blaze.protobuf;

/**
 * Protobuf type {@code plan.protobuf.ExpandExecNode}
 */
public final class ExpandExecNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:plan.protobuf.ExpandExecNode)
    ExpandExecNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExpandExecNode.newBuilder() to construct.
  private ExpandExecNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExpandExecNode() {
    projections_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExpandExecNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ExpandExecNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ExpandExecNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.blaze.protobuf.ExpandExecNode.class, org.blaze.protobuf.ExpandExecNode.Builder.class);
  }

  public static final int INPUT_FIELD_NUMBER = 1;
  private org.blaze.protobuf.PhysicalPlanNode input_;
  /**
   * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
   * @return Whether the input field is set.
   */
  @java.lang.Override
  public boolean hasInput() {
    return input_ != null;
  }
  /**
   * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
   * @return The input.
   */
  @java.lang.Override
  public org.blaze.protobuf.PhysicalPlanNode getInput() {
    return input_ == null ? org.blaze.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
  }
  /**
   * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.PhysicalPlanNodeOrBuilder getInputOrBuilder() {
    return getInput();
  }

  public static final int SCHEMA_FIELD_NUMBER = 2;
  private org.blaze.protobuf.Schema schema_;
  /**
   * <code>.plan.protobuf.Schema schema = 2;</code>
   * @return Whether the schema field is set.
   */
  @java.lang.Override
  public boolean hasSchema() {
    return schema_ != null;
  }
  /**
   * <code>.plan.protobuf.Schema schema = 2;</code>
   * @return The schema.
   */
  @java.lang.Override
  public org.blaze.protobuf.Schema getSchema() {
    return schema_ == null ? org.blaze.protobuf.Schema.getDefaultInstance() : schema_;
  }
  /**
   * <code>.plan.protobuf.Schema schema = 2;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.SchemaOrBuilder getSchemaOrBuilder() {
    return getSchema();
  }

  public static final int PROJECTIONS_FIELD_NUMBER = 3;
  private java.util.List<org.blaze.protobuf.ExpandProjection> projections_;
  /**
   * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.blaze.protobuf.ExpandProjection> getProjectionsList() {
    return projections_;
  }
  /**
   * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.blaze.protobuf.ExpandProjectionOrBuilder> 
      getProjectionsOrBuilderList() {
    return projections_;
  }
  /**
   * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
   */
  @java.lang.Override
  public int getProjectionsCount() {
    return projections_.size();
  }
  /**
   * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.ExpandProjection getProjections(int index) {
    return projections_.get(index);
  }
  /**
   * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.ExpandProjectionOrBuilder getProjectionsOrBuilder(
      int index) {
    return projections_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (input_ != null) {
      output.writeMessage(1, getInput());
    }
    if (schema_ != null) {
      output.writeMessage(2, getSchema());
    }
    for (int i = 0; i < projections_.size(); i++) {
      output.writeMessage(3, projections_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (input_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInput());
    }
    if (schema_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getSchema());
    }
    for (int i = 0; i < projections_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, projections_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.blaze.protobuf.ExpandExecNode)) {
      return super.equals(obj);
    }
    org.blaze.protobuf.ExpandExecNode other = (org.blaze.protobuf.ExpandExecNode) obj;

    if (hasInput() != other.hasInput()) return false;
    if (hasInput()) {
      if (!getInput()
          .equals(other.getInput())) return false;
    }
    if (hasSchema() != other.hasSchema()) return false;
    if (hasSchema()) {
      if (!getSchema()
          .equals(other.getSchema())) return false;
    }
    if (!getProjectionsList()
        .equals(other.getProjectionsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInput()) {
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getInput().hashCode();
    }
    if (hasSchema()) {
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
    }
    if (getProjectionsCount() > 0) {
      hash = (37 * hash) + PROJECTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getProjectionsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.blaze.protobuf.ExpandExecNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.ExpandExecNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.ExpandExecNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.ExpandExecNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.blaze.protobuf.ExpandExecNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code plan.protobuf.ExpandExecNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:plan.protobuf.ExpandExecNode)
      org.blaze.protobuf.ExpandExecNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ExpandExecNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ExpandExecNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.blaze.protobuf.ExpandExecNode.class, org.blaze.protobuf.ExpandExecNode.Builder.class);
    }

    // Construct using org.blaze.protobuf.ExpandExecNode.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (inputBuilder_ == null) {
        input_ = null;
      } else {
        input_ = null;
        inputBuilder_ = null;
      }
      if (schemaBuilder_ == null) {
        schema_ = null;
      } else {
        schema_ = null;
        schemaBuilder_ = null;
      }
      if (projectionsBuilder_ == null) {
        projections_ = java.util.Collections.emptyList();
      } else {
        projections_ = null;
        projectionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ExpandExecNode_descriptor;
    }

    @java.lang.Override
    public org.blaze.protobuf.ExpandExecNode getDefaultInstanceForType() {
      return org.blaze.protobuf.ExpandExecNode.getDefaultInstance();
    }

    @java.lang.Override
    public org.blaze.protobuf.ExpandExecNode build() {
      org.blaze.protobuf.ExpandExecNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.blaze.protobuf.ExpandExecNode buildPartial() {
      org.blaze.protobuf.ExpandExecNode result = new org.blaze.protobuf.ExpandExecNode(this);
      int from_bitField0_ = bitField0_;
      if (inputBuilder_ == null) {
        result.input_ = input_;
      } else {
        result.input_ = inputBuilder_.build();
      }
      if (schemaBuilder_ == null) {
        result.schema_ = schema_;
      } else {
        result.schema_ = schemaBuilder_.build();
      }
      if (projectionsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          projections_ = java.util.Collections.unmodifiableList(projections_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.projections_ = projections_;
      } else {
        result.projections_ = projectionsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.blaze.protobuf.ExpandExecNode) {
        return mergeFrom((org.blaze.protobuf.ExpandExecNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.blaze.protobuf.ExpandExecNode other) {
      if (other == org.blaze.protobuf.ExpandExecNode.getDefaultInstance()) return this;
      if (other.hasInput()) {
        mergeInput(other.getInput());
      }
      if (other.hasSchema()) {
        mergeSchema(other.getSchema());
      }
      if (projectionsBuilder_ == null) {
        if (!other.projections_.isEmpty()) {
          if (projections_.isEmpty()) {
            projections_ = other.projections_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureProjectionsIsMutable();
            projections_.addAll(other.projections_);
          }
          onChanged();
        }
      } else {
        if (!other.projections_.isEmpty()) {
          if (projectionsBuilder_.isEmpty()) {
            projectionsBuilder_.dispose();
            projectionsBuilder_ = null;
            projections_ = other.projections_;
            bitField0_ = (bitField0_ & ~0x00000001);
            projectionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getProjectionsFieldBuilder() : null;
          } else {
            projectionsBuilder_.addAllMessages(other.projections_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getInputFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getSchemaFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 26: {
              org.blaze.protobuf.ExpandProjection m =
                  input.readMessage(
                      org.blaze.protobuf.ExpandProjection.parser(),
                      extensionRegistry);
              if (projectionsBuilder_ == null) {
                ensureProjectionsIsMutable();
                projections_.add(m);
              } else {
                projectionsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.blaze.protobuf.PhysicalPlanNode input_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.PhysicalPlanNode, org.blaze.protobuf.PhysicalPlanNode.Builder, org.blaze.protobuf.PhysicalPlanNodeOrBuilder> inputBuilder_;
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     * @return Whether the input field is set.
     */
    public boolean hasInput() {
      return inputBuilder_ != null || input_ != null;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     * @return The input.
     */
    public org.blaze.protobuf.PhysicalPlanNode getInput() {
      if (inputBuilder_ == null) {
        return input_ == null ? org.blaze.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
      } else {
        return inputBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder setInput(org.blaze.protobuf.PhysicalPlanNode value) {
      if (inputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        input_ = value;
        onChanged();
      } else {
        inputBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder setInput(
        org.blaze.protobuf.PhysicalPlanNode.Builder builderForValue) {
      if (inputBuilder_ == null) {
        input_ = builderForValue.build();
        onChanged();
      } else {
        inputBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder mergeInput(org.blaze.protobuf.PhysicalPlanNode value) {
      if (inputBuilder_ == null) {
        if (input_ != null) {
          input_ =
            org.blaze.protobuf.PhysicalPlanNode.newBuilder(input_).mergeFrom(value).buildPartial();
        } else {
          input_ = value;
        }
        onChanged();
      } else {
        inputBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public Builder clearInput() {
      if (inputBuilder_ == null) {
        input_ = null;
        onChanged();
      } else {
        input_ = null;
        inputBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public org.blaze.protobuf.PhysicalPlanNode.Builder getInputBuilder() {
      
      onChanged();
      return getInputFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    public org.blaze.protobuf.PhysicalPlanNodeOrBuilder getInputOrBuilder() {
      if (inputBuilder_ != null) {
        return inputBuilder_.getMessageOrBuilder();
      } else {
        return input_ == null ?
            org.blaze.protobuf.PhysicalPlanNode.getDefaultInstance() : input_;
      }
    }
    /**
     * <code>.plan.protobuf.PhysicalPlanNode input = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.PhysicalPlanNode, org.blaze.protobuf.PhysicalPlanNode.Builder, org.blaze.protobuf.PhysicalPlanNodeOrBuilder> 
        getInputFieldBuilder() {
      if (inputBuilder_ == null) {
        inputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.PhysicalPlanNode, org.blaze.protobuf.PhysicalPlanNode.Builder, org.blaze.protobuf.PhysicalPlanNodeOrBuilder>(
                getInput(),
                getParentForChildren(),
                isClean());
        input_ = null;
      }
      return inputBuilder_;
    }

    private org.blaze.protobuf.Schema schema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder> schemaBuilder_;
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     * @return Whether the schema field is set.
     */
    public boolean hasSchema() {
      return schemaBuilder_ != null || schema_ != null;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     * @return The schema.
     */
    public org.blaze.protobuf.Schema getSchema() {
      if (schemaBuilder_ == null) {
        return schema_ == null ? org.blaze.protobuf.Schema.getDefaultInstance() : schema_;
      } else {
        return schemaBuilder_.getMessage();
      }
    }
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     */
    public Builder setSchema(org.blaze.protobuf.Schema value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        schema_ = value;
        onChanged();
      } else {
        schemaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     */
    public Builder setSchema(
        org.blaze.protobuf.Schema.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        schema_ = builderForValue.build();
        onChanged();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     */
    public Builder mergeSchema(org.blaze.protobuf.Schema value) {
      if (schemaBuilder_ == null) {
        if (schema_ != null) {
          schema_ =
            org.blaze.protobuf.Schema.newBuilder(schema_).mergeFrom(value).buildPartial();
        } else {
          schema_ = value;
        }
        onChanged();
      } else {
        schemaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     */
    public Builder clearSchema() {
      if (schemaBuilder_ == null) {
        schema_ = null;
        onChanged();
      } else {
        schema_ = null;
        schemaBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     */
    public org.blaze.protobuf.Schema.Builder getSchemaBuilder() {
      
      onChanged();
      return getSchemaFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     */
    public org.blaze.protobuf.SchemaOrBuilder getSchemaOrBuilder() {
      if (schemaBuilder_ != null) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        return schema_ == null ?
            org.blaze.protobuf.Schema.getDefaultInstance() : schema_;
      }
    }
    /**
     * <code>.plan.protobuf.Schema schema = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder> 
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.Schema, org.blaze.protobuf.Schema.Builder, org.blaze.protobuf.SchemaOrBuilder>(
                getSchema(),
                getParentForChildren(),
                isClean());
        schema_ = null;
      }
      return schemaBuilder_;
    }

    private java.util.List<org.blaze.protobuf.ExpandProjection> projections_ =
      java.util.Collections.emptyList();
    private void ensureProjectionsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        projections_ = new java.util.ArrayList<org.blaze.protobuf.ExpandProjection>(projections_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.blaze.protobuf.ExpandProjection, org.blaze.protobuf.ExpandProjection.Builder, org.blaze.protobuf.ExpandProjectionOrBuilder> projectionsBuilder_;

    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public java.util.List<org.blaze.protobuf.ExpandProjection> getProjectionsList() {
      if (projectionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(projections_);
      } else {
        return projectionsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public int getProjectionsCount() {
      if (projectionsBuilder_ == null) {
        return projections_.size();
      } else {
        return projectionsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public org.blaze.protobuf.ExpandProjection getProjections(int index) {
      if (projectionsBuilder_ == null) {
        return projections_.get(index);
      } else {
        return projectionsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder setProjections(
        int index, org.blaze.protobuf.ExpandProjection value) {
      if (projectionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProjectionsIsMutable();
        projections_.set(index, value);
        onChanged();
      } else {
        projectionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder setProjections(
        int index, org.blaze.protobuf.ExpandProjection.Builder builderForValue) {
      if (projectionsBuilder_ == null) {
        ensureProjectionsIsMutable();
        projections_.set(index, builderForValue.build());
        onChanged();
      } else {
        projectionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder addProjections(org.blaze.protobuf.ExpandProjection value) {
      if (projectionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProjectionsIsMutable();
        projections_.add(value);
        onChanged();
      } else {
        projectionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder addProjections(
        int index, org.blaze.protobuf.ExpandProjection value) {
      if (projectionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProjectionsIsMutable();
        projections_.add(index, value);
        onChanged();
      } else {
        projectionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder addProjections(
        org.blaze.protobuf.ExpandProjection.Builder builderForValue) {
      if (projectionsBuilder_ == null) {
        ensureProjectionsIsMutable();
        projections_.add(builderForValue.build());
        onChanged();
      } else {
        projectionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder addProjections(
        int index, org.blaze.protobuf.ExpandProjection.Builder builderForValue) {
      if (projectionsBuilder_ == null) {
        ensureProjectionsIsMutable();
        projections_.add(index, builderForValue.build());
        onChanged();
      } else {
        projectionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder addAllProjections(
        java.lang.Iterable<? extends org.blaze.protobuf.ExpandProjection> values) {
      if (projectionsBuilder_ == null) {
        ensureProjectionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, projections_);
        onChanged();
      } else {
        projectionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder clearProjections() {
      if (projectionsBuilder_ == null) {
        projections_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        projectionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public Builder removeProjections(int index) {
      if (projectionsBuilder_ == null) {
        ensureProjectionsIsMutable();
        projections_.remove(index);
        onChanged();
      } else {
        projectionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public org.blaze.protobuf.ExpandProjection.Builder getProjectionsBuilder(
        int index) {
      return getProjectionsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public org.blaze.protobuf.ExpandProjectionOrBuilder getProjectionsOrBuilder(
        int index) {
      if (projectionsBuilder_ == null) {
        return projections_.get(index);  } else {
        return projectionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public java.util.List<? extends org.blaze.protobuf.ExpandProjectionOrBuilder> 
         getProjectionsOrBuilderList() {
      if (projectionsBuilder_ != null) {
        return projectionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(projections_);
      }
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public org.blaze.protobuf.ExpandProjection.Builder addProjectionsBuilder() {
      return getProjectionsFieldBuilder().addBuilder(
          org.blaze.protobuf.ExpandProjection.getDefaultInstance());
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public org.blaze.protobuf.ExpandProjection.Builder addProjectionsBuilder(
        int index) {
      return getProjectionsFieldBuilder().addBuilder(
          index, org.blaze.protobuf.ExpandProjection.getDefaultInstance());
    }
    /**
     * <code>repeated .plan.protobuf.ExpandProjection projections = 3;</code>
     */
    public java.util.List<org.blaze.protobuf.ExpandProjection.Builder> 
         getProjectionsBuilderList() {
      return getProjectionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.blaze.protobuf.ExpandProjection, org.blaze.protobuf.ExpandProjection.Builder, org.blaze.protobuf.ExpandProjectionOrBuilder> 
        getProjectionsFieldBuilder() {
      if (projectionsBuilder_ == null) {
        projectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.blaze.protobuf.ExpandProjection, org.blaze.protobuf.ExpandProjection.Builder, org.blaze.protobuf.ExpandProjectionOrBuilder>(
                projections_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        projections_ = null;
      }
      return projectionsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:plan.protobuf.ExpandExecNode)
  }

  // @@protoc_insertion_point(class_scope:plan.protobuf.ExpandExecNode)
  private static final org.blaze.protobuf.ExpandExecNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.blaze.protobuf.ExpandExecNode();
  }

  public static org.blaze.protobuf.ExpandExecNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExpandExecNode>
      PARSER = new com.google.protobuf.AbstractParser<ExpandExecNode>() {
    @java.lang.Override
    public ExpandExecNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ExpandExecNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExpandExecNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.blaze.protobuf.ExpandExecNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

