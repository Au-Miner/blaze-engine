// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blaze.proto

package org.blaze.protobuf;

public interface FileScanExecConfOrBuilder extends
    // @@protoc_insertion_point(interface_extends:plan.protobuf.FileScanExecConf)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int64 num_partitions = 1;</code>
   * @return The numPartitions.
   */
  long getNumPartitions();

  /**
   * <code>int64 partition_index = 2;</code>
   * @return The partitionIndex.
   */
  long getPartitionIndex();

  /**
   * <code>.plan.protobuf.FileGroup file_group = 3;</code>
   * @return Whether the fileGroup field is set.
   */
  boolean hasFileGroup();
  /**
   * <code>.plan.protobuf.FileGroup file_group = 3;</code>
   * @return The fileGroup.
   */
  org.blaze.protobuf.FileGroup getFileGroup();
  /**
   * <code>.plan.protobuf.FileGroup file_group = 3;</code>
   */
  org.blaze.protobuf.FileGroupOrBuilder getFileGroupOrBuilder();

  /**
   * <code>.plan.protobuf.Schema schema = 4;</code>
   * @return Whether the schema field is set.
   */
  boolean hasSchema();
  /**
   * <code>.plan.protobuf.Schema schema = 4;</code>
   * @return The schema.
   */
  org.blaze.protobuf.Schema getSchema();
  /**
   * <code>.plan.protobuf.Schema schema = 4;</code>
   */
  org.blaze.protobuf.SchemaOrBuilder getSchemaOrBuilder();

  /**
   * <code>repeated uint32 projection = 6;</code>
   * @return A list containing the projection.
   */
  java.util.List<java.lang.Integer> getProjectionList();
  /**
   * <code>repeated uint32 projection = 6;</code>
   * @return The count of projection.
   */
  int getProjectionCount();
  /**
   * <code>repeated uint32 projection = 6;</code>
   * @param index The index of the element to return.
   * @return The projection at the given index.
   */
  int getProjection(int index);

  /**
   * <code>.plan.protobuf.ScanLimit limit = 7;</code>
   * @return Whether the limit field is set.
   */
  boolean hasLimit();
  /**
   * <code>.plan.protobuf.ScanLimit limit = 7;</code>
   * @return The limit.
   */
  org.blaze.protobuf.ScanLimit getLimit();
  /**
   * <code>.plan.protobuf.ScanLimit limit = 7;</code>
   */
  org.blaze.protobuf.ScanLimitOrBuilder getLimitOrBuilder();

  /**
   * <code>.plan.protobuf.Statistics statistics = 8;</code>
   * @return Whether the statistics field is set.
   */
  boolean hasStatistics();
  /**
   * <code>.plan.protobuf.Statistics statistics = 8;</code>
   * @return The statistics.
   */
  org.blaze.protobuf.Statistics getStatistics();
  /**
   * <code>.plan.protobuf.Statistics statistics = 8;</code>
   */
  org.blaze.protobuf.StatisticsOrBuilder getStatisticsOrBuilder();

  /**
   * <code>.plan.protobuf.Schema partition_schema = 9;</code>
   * @return Whether the partitionSchema field is set.
   */
  boolean hasPartitionSchema();
  /**
   * <code>.plan.protobuf.Schema partition_schema = 9;</code>
   * @return The partitionSchema.
   */
  org.blaze.protobuf.Schema getPartitionSchema();
  /**
   * <code>.plan.protobuf.Schema partition_schema = 9;</code>
   */
  org.blaze.protobuf.SchemaOrBuilder getPartitionSchemaOrBuilder();
}
