// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blaze.proto

package org.blaze.protobuf;

/**
 * Protobuf type {@code plan.protobuf.ScalarValue}
 */
public final class ScalarValue extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:plan.protobuf.ScalarValue)
    ScalarValueOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ScalarValue.newBuilder() to construct.
  private ScalarValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ScalarValue() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ScalarValue();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ScalarValue_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ScalarValue_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.blaze.protobuf.ScalarValue.class, org.blaze.protobuf.ScalarValue.Builder.class);
  }

  private int valueCase_ = 0;
  private java.lang.Object value_;
  public enum ValueCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BOOL_VALUE(1),
    UTF8_VALUE(2),
    LARGE_UTF8_VALUE(3),
    INT8_VALUE(4),
    INT16_VALUE(5),
    INT32_VALUE(6),
    INT64_VALUE(7),
    UINT8_VALUE(8),
    UINT16_VALUE(9),
    UINT32_VALUE(10),
    UINT64_VALUE(11),
    FLOAT32_VALUE(12),
    FLOAT64_VALUE(13),
    DATE32_VALUE(14),
    TIMESTAMP_SECOND_VALUE(15),
    TIMESTAMP_MILLISECOND_VALUE(16),
    TIMESTAMP_MICROSECOND_VALUE(17),
    TIMESTAMP_NANOSECOND_VALUE(18),
    LIST_VALUE(19),
    DECIMAL_VALUE(20),
    NULL_VALUE(1000),
    VALUE_NOT_SET(0);
    private final int value;
    private ValueCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 1: return BOOL_VALUE;
        case 2: return UTF8_VALUE;
        case 3: return LARGE_UTF8_VALUE;
        case 4: return INT8_VALUE;
        case 5: return INT16_VALUE;
        case 6: return INT32_VALUE;
        case 7: return INT64_VALUE;
        case 8: return UINT8_VALUE;
        case 9: return UINT16_VALUE;
        case 10: return UINT32_VALUE;
        case 11: return UINT64_VALUE;
        case 12: return FLOAT32_VALUE;
        case 13: return FLOAT64_VALUE;
        case 14: return DATE32_VALUE;
        case 15: return TIMESTAMP_SECOND_VALUE;
        case 16: return TIMESTAMP_MILLISECOND_VALUE;
        case 17: return TIMESTAMP_MICROSECOND_VALUE;
        case 18: return TIMESTAMP_NANOSECOND_VALUE;
        case 19: return LIST_VALUE;
        case 20: return DECIMAL_VALUE;
        case 1000: return NULL_VALUE;
        case 0: return VALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ValueCase
  getValueCase() {
    return ValueCase.forNumber(
        valueCase_);
  }

  public static final int BOOL_VALUE_FIELD_NUMBER = 1;
  /**
   * <code>bool bool_value = 1;</code>
   * @return Whether the boolValue field is set.
   */
  @java.lang.Override
  public boolean hasBoolValue() {
    return valueCase_ == 1;
  }
  /**
   * <code>bool bool_value = 1;</code>
   * @return The boolValue.
   */
  @java.lang.Override
  public boolean getBoolValue() {
    if (valueCase_ == 1) {
      return (java.lang.Boolean) value_;
    }
    return false;
  }

  public static final int UTF8_VALUE_FIELD_NUMBER = 2;
  /**
   * <code>string utf8_value = 2;</code>
   * @return Whether the utf8Value field is set.
   */
  public boolean hasUtf8Value() {
    return valueCase_ == 2;
  }
  /**
   * <code>string utf8_value = 2;</code>
   * @return The utf8Value.
   */
  public java.lang.String getUtf8Value() {
    java.lang.Object ref = "";
    if (valueCase_ == 2) {
      ref = value_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (valueCase_ == 2) {
        value_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string utf8_value = 2;</code>
   * @return The bytes for utf8Value.
   */
  public com.google.protobuf.ByteString
      getUtf8ValueBytes() {
    java.lang.Object ref = "";
    if (valueCase_ == 2) {
      ref = value_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (valueCase_ == 2) {
        value_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LARGE_UTF8_VALUE_FIELD_NUMBER = 3;
  /**
   * <code>string large_utf8_value = 3;</code>
   * @return Whether the largeUtf8Value field is set.
   */
  public boolean hasLargeUtf8Value() {
    return valueCase_ == 3;
  }
  /**
   * <code>string large_utf8_value = 3;</code>
   * @return The largeUtf8Value.
   */
  public java.lang.String getLargeUtf8Value() {
    java.lang.Object ref = "";
    if (valueCase_ == 3) {
      ref = value_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (valueCase_ == 3) {
        value_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string large_utf8_value = 3;</code>
   * @return The bytes for largeUtf8Value.
   */
  public com.google.protobuf.ByteString
      getLargeUtf8ValueBytes() {
    java.lang.Object ref = "";
    if (valueCase_ == 3) {
      ref = value_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (valueCase_ == 3) {
        value_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INT8_VALUE_FIELD_NUMBER = 4;
  /**
   * <code>int32 int8_value = 4;</code>
   * @return Whether the int8Value field is set.
   */
  @java.lang.Override
  public boolean hasInt8Value() {
    return valueCase_ == 4;
  }
  /**
   * <code>int32 int8_value = 4;</code>
   * @return The int8Value.
   */
  @java.lang.Override
  public int getInt8Value() {
    if (valueCase_ == 4) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int INT16_VALUE_FIELD_NUMBER = 5;
  /**
   * <code>int32 int16_value = 5;</code>
   * @return Whether the int16Value field is set.
   */
  @java.lang.Override
  public boolean hasInt16Value() {
    return valueCase_ == 5;
  }
  /**
   * <code>int32 int16_value = 5;</code>
   * @return The int16Value.
   */
  @java.lang.Override
  public int getInt16Value() {
    if (valueCase_ == 5) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int INT32_VALUE_FIELD_NUMBER = 6;
  /**
   * <code>int32 int32_value = 6;</code>
   * @return Whether the int32Value field is set.
   */
  @java.lang.Override
  public boolean hasInt32Value() {
    return valueCase_ == 6;
  }
  /**
   * <code>int32 int32_value = 6;</code>
   * @return The int32Value.
   */
  @java.lang.Override
  public int getInt32Value() {
    if (valueCase_ == 6) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int INT64_VALUE_FIELD_NUMBER = 7;
  /**
   * <code>int64 int64_value = 7;</code>
   * @return Whether the int64Value field is set.
   */
  @java.lang.Override
  public boolean hasInt64Value() {
    return valueCase_ == 7;
  }
  /**
   * <code>int64 int64_value = 7;</code>
   * @return The int64Value.
   */
  @java.lang.Override
  public long getInt64Value() {
    if (valueCase_ == 7) {
      return (java.lang.Long) value_;
    }
    return 0L;
  }

  public static final int UINT8_VALUE_FIELD_NUMBER = 8;
  /**
   * <code>uint32 uint8_value = 8;</code>
   * @return Whether the uint8Value field is set.
   */
  @java.lang.Override
  public boolean hasUint8Value() {
    return valueCase_ == 8;
  }
  /**
   * <code>uint32 uint8_value = 8;</code>
   * @return The uint8Value.
   */
  @java.lang.Override
  public int getUint8Value() {
    if (valueCase_ == 8) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int UINT16_VALUE_FIELD_NUMBER = 9;
  /**
   * <code>uint32 uint16_value = 9;</code>
   * @return Whether the uint16Value field is set.
   */
  @java.lang.Override
  public boolean hasUint16Value() {
    return valueCase_ == 9;
  }
  /**
   * <code>uint32 uint16_value = 9;</code>
   * @return The uint16Value.
   */
  @java.lang.Override
  public int getUint16Value() {
    if (valueCase_ == 9) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int UINT32_VALUE_FIELD_NUMBER = 10;
  /**
   * <code>uint32 uint32_value = 10;</code>
   * @return Whether the uint32Value field is set.
   */
  @java.lang.Override
  public boolean hasUint32Value() {
    return valueCase_ == 10;
  }
  /**
   * <code>uint32 uint32_value = 10;</code>
   * @return The uint32Value.
   */
  @java.lang.Override
  public int getUint32Value() {
    if (valueCase_ == 10) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int UINT64_VALUE_FIELD_NUMBER = 11;
  /**
   * <code>uint64 uint64_value = 11;</code>
   * @return Whether the uint64Value field is set.
   */
  @java.lang.Override
  public boolean hasUint64Value() {
    return valueCase_ == 11;
  }
  /**
   * <code>uint64 uint64_value = 11;</code>
   * @return The uint64Value.
   */
  @java.lang.Override
  public long getUint64Value() {
    if (valueCase_ == 11) {
      return (java.lang.Long) value_;
    }
    return 0L;
  }

  public static final int FLOAT32_VALUE_FIELD_NUMBER = 12;
  /**
   * <code>float float32_value = 12;</code>
   * @return Whether the float32Value field is set.
   */
  @java.lang.Override
  public boolean hasFloat32Value() {
    return valueCase_ == 12;
  }
  /**
   * <code>float float32_value = 12;</code>
   * @return The float32Value.
   */
  @java.lang.Override
  public float getFloat32Value() {
    if (valueCase_ == 12) {
      return (java.lang.Float) value_;
    }
    return 0F;
  }

  public static final int FLOAT64_VALUE_FIELD_NUMBER = 13;
  /**
   * <code>double float64_value = 13;</code>
   * @return Whether the float64Value field is set.
   */
  @java.lang.Override
  public boolean hasFloat64Value() {
    return valueCase_ == 13;
  }
  /**
   * <code>double float64_value = 13;</code>
   * @return The float64Value.
   */
  @java.lang.Override
  public double getFloat64Value() {
    if (valueCase_ == 13) {
      return (java.lang.Double) value_;
    }
    return 0D;
  }

  public static final int DATE32_VALUE_FIELD_NUMBER = 14;
  /**
   * <code>int32 date32_value = 14;</code>
   * @return Whether the date32Value field is set.
   */
  @java.lang.Override
  public boolean hasDate32Value() {
    return valueCase_ == 14;
  }
  /**
   * <code>int32 date32_value = 14;</code>
   * @return The date32Value.
   */
  @java.lang.Override
  public int getDate32Value() {
    if (valueCase_ == 14) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int TIMESTAMP_SECOND_VALUE_FIELD_NUMBER = 15;
  /**
   * <code>int64 timestamp_second_value = 15;</code>
   * @return Whether the timestampSecondValue field is set.
   */
  @java.lang.Override
  public boolean hasTimestampSecondValue() {
    return valueCase_ == 15;
  }
  /**
   * <code>int64 timestamp_second_value = 15;</code>
   * @return The timestampSecondValue.
   */
  @java.lang.Override
  public long getTimestampSecondValue() {
    if (valueCase_ == 15) {
      return (java.lang.Long) value_;
    }
    return 0L;
  }

  public static final int TIMESTAMP_MILLISECOND_VALUE_FIELD_NUMBER = 16;
  /**
   * <code>int64 timestamp_millisecond_value = 16;</code>
   * @return Whether the timestampMillisecondValue field is set.
   */
  @java.lang.Override
  public boolean hasTimestampMillisecondValue() {
    return valueCase_ == 16;
  }
  /**
   * <code>int64 timestamp_millisecond_value = 16;</code>
   * @return The timestampMillisecondValue.
   */
  @java.lang.Override
  public long getTimestampMillisecondValue() {
    if (valueCase_ == 16) {
      return (java.lang.Long) value_;
    }
    return 0L;
  }

  public static final int TIMESTAMP_MICROSECOND_VALUE_FIELD_NUMBER = 17;
  /**
   * <code>int64 timestamp_microsecond_value = 17;</code>
   * @return Whether the timestampMicrosecondValue field is set.
   */
  @java.lang.Override
  public boolean hasTimestampMicrosecondValue() {
    return valueCase_ == 17;
  }
  /**
   * <code>int64 timestamp_microsecond_value = 17;</code>
   * @return The timestampMicrosecondValue.
   */
  @java.lang.Override
  public long getTimestampMicrosecondValue() {
    if (valueCase_ == 17) {
      return (java.lang.Long) value_;
    }
    return 0L;
  }

  public static final int TIMESTAMP_NANOSECOND_VALUE_FIELD_NUMBER = 18;
  /**
   * <code>int64 timestamp_nanosecond_value = 18;</code>
   * @return Whether the timestampNanosecondValue field is set.
   */
  @java.lang.Override
  public boolean hasTimestampNanosecondValue() {
    return valueCase_ == 18;
  }
  /**
   * <code>int64 timestamp_nanosecond_value = 18;</code>
   * @return The timestampNanosecondValue.
   */
  @java.lang.Override
  public long getTimestampNanosecondValue() {
    if (valueCase_ == 18) {
      return (java.lang.Long) value_;
    }
    return 0L;
  }

  public static final int LIST_VALUE_FIELD_NUMBER = 19;
  /**
   * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
   * @return Whether the listValue field is set.
   */
  @java.lang.Override
  public boolean hasListValue() {
    return valueCase_ == 19;
  }
  /**
   * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
   * @return The listValue.
   */
  @java.lang.Override
  public org.blaze.protobuf.ScalarListValue getListValue() {
    if (valueCase_ == 19) {
       return (org.blaze.protobuf.ScalarListValue) value_;
    }
    return org.blaze.protobuf.ScalarListValue.getDefaultInstance();
  }
  /**
   * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.ScalarListValueOrBuilder getListValueOrBuilder() {
    if (valueCase_ == 19) {
       return (org.blaze.protobuf.ScalarListValue) value_;
    }
    return org.blaze.protobuf.ScalarListValue.getDefaultInstance();
  }

  public static final int DECIMAL_VALUE_FIELD_NUMBER = 20;
  /**
   * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
   * @return Whether the decimalValue field is set.
   */
  @java.lang.Override
  public boolean hasDecimalValue() {
    return valueCase_ == 20;
  }
  /**
   * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
   * @return The decimalValue.
   */
  @java.lang.Override
  public org.blaze.protobuf.ScalarDecimalValue getDecimalValue() {
    if (valueCase_ == 20) {
       return (org.blaze.protobuf.ScalarDecimalValue) value_;
    }
    return org.blaze.protobuf.ScalarDecimalValue.getDefaultInstance();
  }
  /**
   * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.ScalarDecimalValueOrBuilder getDecimalValueOrBuilder() {
    if (valueCase_ == 20) {
       return (org.blaze.protobuf.ScalarDecimalValue) value_;
    }
    return org.blaze.protobuf.ScalarDecimalValue.getDefaultInstance();
  }

  public static final int NULL_VALUE_FIELD_NUMBER = 1000;
  /**
   * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
   * @return Whether the nullValue field is set.
   */
  @java.lang.Override
  public boolean hasNullValue() {
    return valueCase_ == 1000;
  }
  /**
   * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
   * @return The nullValue.
   */
  @java.lang.Override
  public org.blaze.protobuf.ScalarType getNullValue() {
    if (valueCase_ == 1000) {
       return (org.blaze.protobuf.ScalarType) value_;
    }
    return org.blaze.protobuf.ScalarType.getDefaultInstance();
  }
  /**
   * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
   */
  @java.lang.Override
  public org.blaze.protobuf.ScalarTypeOrBuilder getNullValueOrBuilder() {
    if (valueCase_ == 1000) {
       return (org.blaze.protobuf.ScalarType) value_;
    }
    return org.blaze.protobuf.ScalarType.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (valueCase_ == 1) {
      output.writeBool(
          1, (boolean)((java.lang.Boolean) value_));
    }
    if (valueCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
    }
    if (valueCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);
    }
    if (valueCase_ == 4) {
      output.writeInt32(
          4, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 5) {
      output.writeInt32(
          5, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 6) {
      output.writeInt32(
          6, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 7) {
      output.writeInt64(
          7, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 8) {
      output.writeUInt32(
          8, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 9) {
      output.writeUInt32(
          9, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 10) {
      output.writeUInt32(
          10, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 11) {
      output.writeUInt64(
          11, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 12) {
      output.writeFloat(
          12, (float)((java.lang.Float) value_));
    }
    if (valueCase_ == 13) {
      output.writeDouble(
          13, (double)((java.lang.Double) value_));
    }
    if (valueCase_ == 14) {
      output.writeInt32(
          14, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 15) {
      output.writeInt64(
          15, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 16) {
      output.writeInt64(
          16, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 17) {
      output.writeInt64(
          17, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 18) {
      output.writeInt64(
          18, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 19) {
      output.writeMessage(19, (org.blaze.protobuf.ScalarListValue) value_);
    }
    if (valueCase_ == 20) {
      output.writeMessage(20, (org.blaze.protobuf.ScalarDecimalValue) value_);
    }
    if (valueCase_ == 1000) {
      output.writeMessage(1000, (org.blaze.protobuf.ScalarType) value_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (valueCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            1, (boolean)((java.lang.Boolean) value_));
    }
    if (valueCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
    }
    if (valueCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);
    }
    if (valueCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            4, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            5, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            6, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            7, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(
            8, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(
            9, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(
            10, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(
            11, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(
            12, (float)((java.lang.Float) value_));
    }
    if (valueCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            13, (double)((java.lang.Double) value_));
    }
    if (valueCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            14, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            15, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 16) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            16, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 17) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            17, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 18) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            18, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 19) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, (org.blaze.protobuf.ScalarListValue) value_);
    }
    if (valueCase_ == 20) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, (org.blaze.protobuf.ScalarDecimalValue) value_);
    }
    if (valueCase_ == 1000) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1000, (org.blaze.protobuf.ScalarType) value_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.blaze.protobuf.ScalarValue)) {
      return super.equals(obj);
    }
    org.blaze.protobuf.ScalarValue other = (org.blaze.protobuf.ScalarValue) obj;

    if (!getValueCase().equals(other.getValueCase())) return false;
    switch (valueCase_) {
      case 1:
        if (getBoolValue()
            != other.getBoolValue()) return false;
        break;
      case 2:
        if (!getUtf8Value()
            .equals(other.getUtf8Value())) return false;
        break;
      case 3:
        if (!getLargeUtf8Value()
            .equals(other.getLargeUtf8Value())) return false;
        break;
      case 4:
        if (getInt8Value()
            != other.getInt8Value()) return false;
        break;
      case 5:
        if (getInt16Value()
            != other.getInt16Value()) return false;
        break;
      case 6:
        if (getInt32Value()
            != other.getInt32Value()) return false;
        break;
      case 7:
        if (getInt64Value()
            != other.getInt64Value()) return false;
        break;
      case 8:
        if (getUint8Value()
            != other.getUint8Value()) return false;
        break;
      case 9:
        if (getUint16Value()
            != other.getUint16Value()) return false;
        break;
      case 10:
        if (getUint32Value()
            != other.getUint32Value()) return false;
        break;
      case 11:
        if (getUint64Value()
            != other.getUint64Value()) return false;
        break;
      case 12:
        if (java.lang.Float.floatToIntBits(getFloat32Value())
            != java.lang.Float.floatToIntBits(
                other.getFloat32Value())) return false;
        break;
      case 13:
        if (java.lang.Double.doubleToLongBits(getFloat64Value())
            != java.lang.Double.doubleToLongBits(
                other.getFloat64Value())) return false;
        break;
      case 14:
        if (getDate32Value()
            != other.getDate32Value()) return false;
        break;
      case 15:
        if (getTimestampSecondValue()
            != other.getTimestampSecondValue()) return false;
        break;
      case 16:
        if (getTimestampMillisecondValue()
            != other.getTimestampMillisecondValue()) return false;
        break;
      case 17:
        if (getTimestampMicrosecondValue()
            != other.getTimestampMicrosecondValue()) return false;
        break;
      case 18:
        if (getTimestampNanosecondValue()
            != other.getTimestampNanosecondValue()) return false;
        break;
      case 19:
        if (!getListValue()
            .equals(other.getListValue())) return false;
        break;
      case 20:
        if (!getDecimalValue()
            .equals(other.getDecimalValue())) return false;
        break;
      case 1000:
        if (!getNullValue()
            .equals(other.getNullValue())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (valueCase_) {
      case 1:
        hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBoolValue());
        break;
      case 2:
        hash = (37 * hash) + UTF8_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getUtf8Value().hashCode();
        break;
      case 3:
        hash = (37 * hash) + LARGE_UTF8_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getLargeUtf8Value().hashCode();
        break;
      case 4:
        hash = (37 * hash) + INT8_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getInt8Value();
        break;
      case 5:
        hash = (37 * hash) + INT16_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getInt16Value();
        break;
      case 6:
        hash = (37 * hash) + INT32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getInt32Value();
        break;
      case 7:
        hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInt64Value());
        break;
      case 8:
        hash = (37 * hash) + UINT8_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getUint8Value();
        break;
      case 9:
        hash = (37 * hash) + UINT16_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getUint16Value();
        break;
      case 10:
        hash = (37 * hash) + UINT32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getUint32Value();
        break;
      case 11:
        hash = (37 * hash) + UINT64_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUint64Value());
        break;
      case 12:
        hash = (37 * hash) + FLOAT32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFloat32Value());
        break;
      case 13:
        hash = (37 * hash) + FLOAT64_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFloat64Value()));
        break;
      case 14:
        hash = (37 * hash) + DATE32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getDate32Value();
        break;
      case 15:
        hash = (37 * hash) + TIMESTAMP_SECOND_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestampSecondValue());
        break;
      case 16:
        hash = (37 * hash) + TIMESTAMP_MILLISECOND_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestampMillisecondValue());
        break;
      case 17:
        hash = (37 * hash) + TIMESTAMP_MICROSECOND_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestampMicrosecondValue());
        break;
      case 18:
        hash = (37 * hash) + TIMESTAMP_NANOSECOND_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestampNanosecondValue());
        break;
      case 19:
        hash = (37 * hash) + LIST_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getListValue().hashCode();
        break;
      case 20:
        hash = (37 * hash) + DECIMAL_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getDecimalValue().hashCode();
        break;
      case 1000:
        hash = (37 * hash) + NULL_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getNullValue().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.blaze.protobuf.ScalarValue parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.ScalarValue parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.ScalarValue parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.blaze.protobuf.ScalarValue parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.blaze.protobuf.ScalarValue prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code plan.protobuf.ScalarValue}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:plan.protobuf.ScalarValue)
      org.blaze.protobuf.ScalarValueOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ScalarValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ScalarValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.blaze.protobuf.ScalarValue.class, org.blaze.protobuf.ScalarValue.Builder.class);
    }

    // Construct using org.blaze.protobuf.ScalarValue.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (listValueBuilder_ != null) {
        listValueBuilder_.clear();
      }
      if (decimalValueBuilder_ != null) {
        decimalValueBuilder_.clear();
      }
      if (nullValueBuilder_ != null) {
        nullValueBuilder_.clear();
      }
      valueCase_ = 0;
      value_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.blaze.protobuf.BlazeProto.internal_static_plan_protobuf_ScalarValue_descriptor;
    }

    @java.lang.Override
    public org.blaze.protobuf.ScalarValue getDefaultInstanceForType() {
      return org.blaze.protobuf.ScalarValue.getDefaultInstance();
    }

    @java.lang.Override
    public org.blaze.protobuf.ScalarValue build() {
      org.blaze.protobuf.ScalarValue result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.blaze.protobuf.ScalarValue buildPartial() {
      org.blaze.protobuf.ScalarValue result = new org.blaze.protobuf.ScalarValue(this);
      if (valueCase_ == 1) {
        result.value_ = value_;
      }
      if (valueCase_ == 2) {
        result.value_ = value_;
      }
      if (valueCase_ == 3) {
        result.value_ = value_;
      }
      if (valueCase_ == 4) {
        result.value_ = value_;
      }
      if (valueCase_ == 5) {
        result.value_ = value_;
      }
      if (valueCase_ == 6) {
        result.value_ = value_;
      }
      if (valueCase_ == 7) {
        result.value_ = value_;
      }
      if (valueCase_ == 8) {
        result.value_ = value_;
      }
      if (valueCase_ == 9) {
        result.value_ = value_;
      }
      if (valueCase_ == 10) {
        result.value_ = value_;
      }
      if (valueCase_ == 11) {
        result.value_ = value_;
      }
      if (valueCase_ == 12) {
        result.value_ = value_;
      }
      if (valueCase_ == 13) {
        result.value_ = value_;
      }
      if (valueCase_ == 14) {
        result.value_ = value_;
      }
      if (valueCase_ == 15) {
        result.value_ = value_;
      }
      if (valueCase_ == 16) {
        result.value_ = value_;
      }
      if (valueCase_ == 17) {
        result.value_ = value_;
      }
      if (valueCase_ == 18) {
        result.value_ = value_;
      }
      if (valueCase_ == 19) {
        if (listValueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = listValueBuilder_.build();
        }
      }
      if (valueCase_ == 20) {
        if (decimalValueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = decimalValueBuilder_.build();
        }
      }
      if (valueCase_ == 1000) {
        if (nullValueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = nullValueBuilder_.build();
        }
      }
      result.valueCase_ = valueCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.blaze.protobuf.ScalarValue) {
        return mergeFrom((org.blaze.protobuf.ScalarValue)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.blaze.protobuf.ScalarValue other) {
      if (other == org.blaze.protobuf.ScalarValue.getDefaultInstance()) return this;
      switch (other.getValueCase()) {
        case BOOL_VALUE: {
          setBoolValue(other.getBoolValue());
          break;
        }
        case UTF8_VALUE: {
          valueCase_ = 2;
          value_ = other.value_;
          onChanged();
          break;
        }
        case LARGE_UTF8_VALUE: {
          valueCase_ = 3;
          value_ = other.value_;
          onChanged();
          break;
        }
        case INT8_VALUE: {
          setInt8Value(other.getInt8Value());
          break;
        }
        case INT16_VALUE: {
          setInt16Value(other.getInt16Value());
          break;
        }
        case INT32_VALUE: {
          setInt32Value(other.getInt32Value());
          break;
        }
        case INT64_VALUE: {
          setInt64Value(other.getInt64Value());
          break;
        }
        case UINT8_VALUE: {
          setUint8Value(other.getUint8Value());
          break;
        }
        case UINT16_VALUE: {
          setUint16Value(other.getUint16Value());
          break;
        }
        case UINT32_VALUE: {
          setUint32Value(other.getUint32Value());
          break;
        }
        case UINT64_VALUE: {
          setUint64Value(other.getUint64Value());
          break;
        }
        case FLOAT32_VALUE: {
          setFloat32Value(other.getFloat32Value());
          break;
        }
        case FLOAT64_VALUE: {
          setFloat64Value(other.getFloat64Value());
          break;
        }
        case DATE32_VALUE: {
          setDate32Value(other.getDate32Value());
          break;
        }
        case TIMESTAMP_SECOND_VALUE: {
          setTimestampSecondValue(other.getTimestampSecondValue());
          break;
        }
        case TIMESTAMP_MILLISECOND_VALUE: {
          setTimestampMillisecondValue(other.getTimestampMillisecondValue());
          break;
        }
        case TIMESTAMP_MICROSECOND_VALUE: {
          setTimestampMicrosecondValue(other.getTimestampMicrosecondValue());
          break;
        }
        case TIMESTAMP_NANOSECOND_VALUE: {
          setTimestampNanosecondValue(other.getTimestampNanosecondValue());
          break;
        }
        case LIST_VALUE: {
          mergeListValue(other.getListValue());
          break;
        }
        case DECIMAL_VALUE: {
          mergeDecimalValue(other.getDecimalValue());
          break;
        }
        case NULL_VALUE: {
          mergeNullValue(other.getNullValue());
          break;
        }
        case VALUE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              value_ = input.readBool();
              valueCase_ = 1;
              break;
            } // case 8
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              valueCase_ = 2;
              value_ = s;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              valueCase_ = 3;
              value_ = s;
              break;
            } // case 26
            case 32: {
              value_ = input.readInt32();
              valueCase_ = 4;
              break;
            } // case 32
            case 40: {
              value_ = input.readInt32();
              valueCase_ = 5;
              break;
            } // case 40
            case 48: {
              value_ = input.readInt32();
              valueCase_ = 6;
              break;
            } // case 48
            case 56: {
              value_ = input.readInt64();
              valueCase_ = 7;
              break;
            } // case 56
            case 64: {
              value_ = input.readUInt32();
              valueCase_ = 8;
              break;
            } // case 64
            case 72: {
              value_ = input.readUInt32();
              valueCase_ = 9;
              break;
            } // case 72
            case 80: {
              value_ = input.readUInt32();
              valueCase_ = 10;
              break;
            } // case 80
            case 88: {
              value_ = input.readUInt64();
              valueCase_ = 11;
              break;
            } // case 88
            case 101: {
              value_ = input.readFloat();
              valueCase_ = 12;
              break;
            } // case 101
            case 105: {
              value_ = input.readDouble();
              valueCase_ = 13;
              break;
            } // case 105
            case 112: {
              value_ = input.readInt32();
              valueCase_ = 14;
              break;
            } // case 112
            case 120: {
              value_ = input.readInt64();
              valueCase_ = 15;
              break;
            } // case 120
            case 128: {
              value_ = input.readInt64();
              valueCase_ = 16;
              break;
            } // case 128
            case 136: {
              value_ = input.readInt64();
              valueCase_ = 17;
              break;
            } // case 136
            case 144: {
              value_ = input.readInt64();
              valueCase_ = 18;
              break;
            } // case 144
            case 154: {
              input.readMessage(
                  getListValueFieldBuilder().getBuilder(),
                  extensionRegistry);
              valueCase_ = 19;
              break;
            } // case 154
            case 162: {
              input.readMessage(
                  getDecimalValueFieldBuilder().getBuilder(),
                  extensionRegistry);
              valueCase_ = 20;
              break;
            } // case 162
            case 8002: {
              input.readMessage(
                  getNullValueFieldBuilder().getBuilder(),
                  extensionRegistry);
              valueCase_ = 1000;
              break;
            } // case 8002
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int valueCase_ = 0;
    private java.lang.Object value_;
    public ValueCase
        getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public Builder clearValue() {
      valueCase_ = 0;
      value_ = null;
      onChanged();
      return this;
    }


    /**
     * <code>bool bool_value = 1;</code>
     * @return Whether the boolValue field is set.
     */
    public boolean hasBoolValue() {
      return valueCase_ == 1;
    }
    /**
     * <code>bool bool_value = 1;</code>
     * @return The boolValue.
     */
    public boolean getBoolValue() {
      if (valueCase_ == 1) {
        return (java.lang.Boolean) value_;
      }
      return false;
    }
    /**
     * <code>bool bool_value = 1;</code>
     * @param value The boolValue to set.
     * @return This builder for chaining.
     */
    public Builder setBoolValue(boolean value) {
      valueCase_ = 1;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool bool_value = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBoolValue() {
      if (valueCase_ == 1) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>string utf8_value = 2;</code>
     * @return Whether the utf8Value field is set.
     */
    @java.lang.Override
    public boolean hasUtf8Value() {
      return valueCase_ == 2;
    }
    /**
     * <code>string utf8_value = 2;</code>
     * @return The utf8Value.
     */
    @java.lang.Override
    public java.lang.String getUtf8Value() {
      java.lang.Object ref = "";
      if (valueCase_ == 2) {
        ref = value_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 2) {
          value_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string utf8_value = 2;</code>
     * @return The bytes for utf8Value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUtf8ValueBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 2) {
        ref = value_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 2) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string utf8_value = 2;</code>
     * @param value The utf8Value to set.
     * @return This builder for chaining.
     */
    public Builder setUtf8Value(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 2;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string utf8_value = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUtf8Value() {
      if (valueCase_ == 2) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string utf8_value = 2;</code>
     * @param value The bytes for utf8Value to set.
     * @return This builder for chaining.
     */
    public Builder setUtf8ValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      valueCase_ = 2;
      value_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>string large_utf8_value = 3;</code>
     * @return Whether the largeUtf8Value field is set.
     */
    @java.lang.Override
    public boolean hasLargeUtf8Value() {
      return valueCase_ == 3;
    }
    /**
     * <code>string large_utf8_value = 3;</code>
     * @return The largeUtf8Value.
     */
    @java.lang.Override
    public java.lang.String getLargeUtf8Value() {
      java.lang.Object ref = "";
      if (valueCase_ == 3) {
        ref = value_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 3) {
          value_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string large_utf8_value = 3;</code>
     * @return The bytes for largeUtf8Value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLargeUtf8ValueBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 3) {
        ref = value_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 3) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string large_utf8_value = 3;</code>
     * @param value The largeUtf8Value to set.
     * @return This builder for chaining.
     */
    public Builder setLargeUtf8Value(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 3;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string large_utf8_value = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearLargeUtf8Value() {
      if (valueCase_ == 3) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string large_utf8_value = 3;</code>
     * @param value The bytes for largeUtf8Value to set.
     * @return This builder for chaining.
     */
    public Builder setLargeUtf8ValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      valueCase_ = 3;
      value_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>int32 int8_value = 4;</code>
     * @return Whether the int8Value field is set.
     */
    public boolean hasInt8Value() {
      return valueCase_ == 4;
    }
    /**
     * <code>int32 int8_value = 4;</code>
     * @return The int8Value.
     */
    public int getInt8Value() {
      if (valueCase_ == 4) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>int32 int8_value = 4;</code>
     * @param value The int8Value to set.
     * @return This builder for chaining.
     */
    public Builder setInt8Value(int value) {
      valueCase_ = 4;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 int8_value = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearInt8Value() {
      if (valueCase_ == 4) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int32 int16_value = 5;</code>
     * @return Whether the int16Value field is set.
     */
    public boolean hasInt16Value() {
      return valueCase_ == 5;
    }
    /**
     * <code>int32 int16_value = 5;</code>
     * @return The int16Value.
     */
    public int getInt16Value() {
      if (valueCase_ == 5) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>int32 int16_value = 5;</code>
     * @param value The int16Value to set.
     * @return This builder for chaining.
     */
    public Builder setInt16Value(int value) {
      valueCase_ = 5;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 int16_value = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearInt16Value() {
      if (valueCase_ == 5) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int32 int32_value = 6;</code>
     * @return Whether the int32Value field is set.
     */
    public boolean hasInt32Value() {
      return valueCase_ == 6;
    }
    /**
     * <code>int32 int32_value = 6;</code>
     * @return The int32Value.
     */
    public int getInt32Value() {
      if (valueCase_ == 6) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>int32 int32_value = 6;</code>
     * @param value The int32Value to set.
     * @return This builder for chaining.
     */
    public Builder setInt32Value(int value) {
      valueCase_ = 6;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 int32_value = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearInt32Value() {
      if (valueCase_ == 6) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int64 int64_value = 7;</code>
     * @return Whether the int64Value field is set.
     */
    public boolean hasInt64Value() {
      return valueCase_ == 7;
    }
    /**
     * <code>int64 int64_value = 7;</code>
     * @return The int64Value.
     */
    public long getInt64Value() {
      if (valueCase_ == 7) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }
    /**
     * <code>int64 int64_value = 7;</code>
     * @param value The int64Value to set.
     * @return This builder for chaining.
     */
    public Builder setInt64Value(long value) {
      valueCase_ = 7;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 int64_value = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearInt64Value() {
      if (valueCase_ == 7) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>uint32 uint8_value = 8;</code>
     * @return Whether the uint8Value field is set.
     */
    public boolean hasUint8Value() {
      return valueCase_ == 8;
    }
    /**
     * <code>uint32 uint8_value = 8;</code>
     * @return The uint8Value.
     */
    public int getUint8Value() {
      if (valueCase_ == 8) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>uint32 uint8_value = 8;</code>
     * @param value The uint8Value to set.
     * @return This builder for chaining.
     */
    public Builder setUint8Value(int value) {
      valueCase_ = 8;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 uint8_value = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearUint8Value() {
      if (valueCase_ == 8) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>uint32 uint16_value = 9;</code>
     * @return Whether the uint16Value field is set.
     */
    public boolean hasUint16Value() {
      return valueCase_ == 9;
    }
    /**
     * <code>uint32 uint16_value = 9;</code>
     * @return The uint16Value.
     */
    public int getUint16Value() {
      if (valueCase_ == 9) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>uint32 uint16_value = 9;</code>
     * @param value The uint16Value to set.
     * @return This builder for chaining.
     */
    public Builder setUint16Value(int value) {
      valueCase_ = 9;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 uint16_value = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearUint16Value() {
      if (valueCase_ == 9) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>uint32 uint32_value = 10;</code>
     * @return Whether the uint32Value field is set.
     */
    public boolean hasUint32Value() {
      return valueCase_ == 10;
    }
    /**
     * <code>uint32 uint32_value = 10;</code>
     * @return The uint32Value.
     */
    public int getUint32Value() {
      if (valueCase_ == 10) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>uint32 uint32_value = 10;</code>
     * @param value The uint32Value to set.
     * @return This builder for chaining.
     */
    public Builder setUint32Value(int value) {
      valueCase_ = 10;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 uint32_value = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearUint32Value() {
      if (valueCase_ == 10) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>uint64 uint64_value = 11;</code>
     * @return Whether the uint64Value field is set.
     */
    public boolean hasUint64Value() {
      return valueCase_ == 11;
    }
    /**
     * <code>uint64 uint64_value = 11;</code>
     * @return The uint64Value.
     */
    public long getUint64Value() {
      if (valueCase_ == 11) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }
    /**
     * <code>uint64 uint64_value = 11;</code>
     * @param value The uint64Value to set.
     * @return This builder for chaining.
     */
    public Builder setUint64Value(long value) {
      valueCase_ = 11;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 uint64_value = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearUint64Value() {
      if (valueCase_ == 11) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>float float32_value = 12;</code>
     * @return Whether the float32Value field is set.
     */
    public boolean hasFloat32Value() {
      return valueCase_ == 12;
    }
    /**
     * <code>float float32_value = 12;</code>
     * @return The float32Value.
     */
    public float getFloat32Value() {
      if (valueCase_ == 12) {
        return (java.lang.Float) value_;
      }
      return 0F;
    }
    /**
     * <code>float float32_value = 12;</code>
     * @param value The float32Value to set.
     * @return This builder for chaining.
     */
    public Builder setFloat32Value(float value) {
      valueCase_ = 12;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float float32_value = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearFloat32Value() {
      if (valueCase_ == 12) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>double float64_value = 13;</code>
     * @return Whether the float64Value field is set.
     */
    public boolean hasFloat64Value() {
      return valueCase_ == 13;
    }
    /**
     * <code>double float64_value = 13;</code>
     * @return The float64Value.
     */
    public double getFloat64Value() {
      if (valueCase_ == 13) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }
    /**
     * <code>double float64_value = 13;</code>
     * @param value The float64Value to set.
     * @return This builder for chaining.
     */
    public Builder setFloat64Value(double value) {
      valueCase_ = 13;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double float64_value = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearFloat64Value() {
      if (valueCase_ == 13) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int32 date32_value = 14;</code>
     * @return Whether the date32Value field is set.
     */
    public boolean hasDate32Value() {
      return valueCase_ == 14;
    }
    /**
     * <code>int32 date32_value = 14;</code>
     * @return The date32Value.
     */
    public int getDate32Value() {
      if (valueCase_ == 14) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>int32 date32_value = 14;</code>
     * @param value The date32Value to set.
     * @return This builder for chaining.
     */
    public Builder setDate32Value(int value) {
      valueCase_ = 14;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 date32_value = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearDate32Value() {
      if (valueCase_ == 14) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int64 timestamp_second_value = 15;</code>
     * @return Whether the timestampSecondValue field is set.
     */
    public boolean hasTimestampSecondValue() {
      return valueCase_ == 15;
    }
    /**
     * <code>int64 timestamp_second_value = 15;</code>
     * @return The timestampSecondValue.
     */
    public long getTimestampSecondValue() {
      if (valueCase_ == 15) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }
    /**
     * <code>int64 timestamp_second_value = 15;</code>
     * @param value The timestampSecondValue to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampSecondValue(long value) {
      valueCase_ = 15;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 timestamp_second_value = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampSecondValue() {
      if (valueCase_ == 15) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int64 timestamp_millisecond_value = 16;</code>
     * @return Whether the timestampMillisecondValue field is set.
     */
    public boolean hasTimestampMillisecondValue() {
      return valueCase_ == 16;
    }
    /**
     * <code>int64 timestamp_millisecond_value = 16;</code>
     * @return The timestampMillisecondValue.
     */
    public long getTimestampMillisecondValue() {
      if (valueCase_ == 16) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }
    /**
     * <code>int64 timestamp_millisecond_value = 16;</code>
     * @param value The timestampMillisecondValue to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampMillisecondValue(long value) {
      valueCase_ = 16;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 timestamp_millisecond_value = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampMillisecondValue() {
      if (valueCase_ == 16) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int64 timestamp_microsecond_value = 17;</code>
     * @return Whether the timestampMicrosecondValue field is set.
     */
    public boolean hasTimestampMicrosecondValue() {
      return valueCase_ == 17;
    }
    /**
     * <code>int64 timestamp_microsecond_value = 17;</code>
     * @return The timestampMicrosecondValue.
     */
    public long getTimestampMicrosecondValue() {
      if (valueCase_ == 17) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }
    /**
     * <code>int64 timestamp_microsecond_value = 17;</code>
     * @param value The timestampMicrosecondValue to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampMicrosecondValue(long value) {
      valueCase_ = 17;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 timestamp_microsecond_value = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampMicrosecondValue() {
      if (valueCase_ == 17) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int64 timestamp_nanosecond_value = 18;</code>
     * @return Whether the timestampNanosecondValue field is set.
     */
    public boolean hasTimestampNanosecondValue() {
      return valueCase_ == 18;
    }
    /**
     * <code>int64 timestamp_nanosecond_value = 18;</code>
     * @return The timestampNanosecondValue.
     */
    public long getTimestampNanosecondValue() {
      if (valueCase_ == 18) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }
    /**
     * <code>int64 timestamp_nanosecond_value = 18;</code>
     * @param value The timestampNanosecondValue to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampNanosecondValue(long value) {
      valueCase_ = 18;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 timestamp_nanosecond_value = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampNanosecondValue() {
      if (valueCase_ == 18) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.ScalarListValue, org.blaze.protobuf.ScalarListValue.Builder, org.blaze.protobuf.ScalarListValueOrBuilder> listValueBuilder_;
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     * @return Whether the listValue field is set.
     */
    @java.lang.Override
    public boolean hasListValue() {
      return valueCase_ == 19;
    }
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     * @return The listValue.
     */
    @java.lang.Override
    public org.blaze.protobuf.ScalarListValue getListValue() {
      if (listValueBuilder_ == null) {
        if (valueCase_ == 19) {
          return (org.blaze.protobuf.ScalarListValue) value_;
        }
        return org.blaze.protobuf.ScalarListValue.getDefaultInstance();
      } else {
        if (valueCase_ == 19) {
          return listValueBuilder_.getMessage();
        }
        return org.blaze.protobuf.ScalarListValue.getDefaultInstance();
      }
    }
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     */
    public Builder setListValue(org.blaze.protobuf.ScalarListValue value) {
      if (listValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
        onChanged();
      } else {
        listValueBuilder_.setMessage(value);
      }
      valueCase_ = 19;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     */
    public Builder setListValue(
        org.blaze.protobuf.ScalarListValue.Builder builderForValue) {
      if (listValueBuilder_ == null) {
        value_ = builderForValue.build();
        onChanged();
      } else {
        listValueBuilder_.setMessage(builderForValue.build());
      }
      valueCase_ = 19;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     */
    public Builder mergeListValue(org.blaze.protobuf.ScalarListValue value) {
      if (listValueBuilder_ == null) {
        if (valueCase_ == 19 &&
            value_ != org.blaze.protobuf.ScalarListValue.getDefaultInstance()) {
          value_ = org.blaze.protobuf.ScalarListValue.newBuilder((org.blaze.protobuf.ScalarListValue) value_)
              .mergeFrom(value).buildPartial();
        } else {
          value_ = value;
        }
        onChanged();
      } else {
        if (valueCase_ == 19) {
          listValueBuilder_.mergeFrom(value);
        } else {
          listValueBuilder_.setMessage(value);
        }
      }
      valueCase_ = 19;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     */
    public Builder clearListValue() {
      if (listValueBuilder_ == null) {
        if (valueCase_ == 19) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
      } else {
        if (valueCase_ == 19) {
          valueCase_ = 0;
          value_ = null;
        }
        listValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     */
    public org.blaze.protobuf.ScalarListValue.Builder getListValueBuilder() {
      return getListValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     */
    @java.lang.Override
    public org.blaze.protobuf.ScalarListValueOrBuilder getListValueOrBuilder() {
      if ((valueCase_ == 19) && (listValueBuilder_ != null)) {
        return listValueBuilder_.getMessageOrBuilder();
      } else {
        if (valueCase_ == 19) {
          return (org.blaze.protobuf.ScalarListValue) value_;
        }
        return org.blaze.protobuf.ScalarListValue.getDefaultInstance();
      }
    }
    /**
     * <code>.plan.protobuf.ScalarListValue list_value = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.ScalarListValue, org.blaze.protobuf.ScalarListValue.Builder, org.blaze.protobuf.ScalarListValueOrBuilder> 
        getListValueFieldBuilder() {
      if (listValueBuilder_ == null) {
        if (!(valueCase_ == 19)) {
          value_ = org.blaze.protobuf.ScalarListValue.getDefaultInstance();
        }
        listValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.ScalarListValue, org.blaze.protobuf.ScalarListValue.Builder, org.blaze.protobuf.ScalarListValueOrBuilder>(
                (org.blaze.protobuf.ScalarListValue) value_,
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      valueCase_ = 19;
      onChanged();;
      return listValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.ScalarDecimalValue, org.blaze.protobuf.ScalarDecimalValue.Builder, org.blaze.protobuf.ScalarDecimalValueOrBuilder> decimalValueBuilder_;
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     * @return Whether the decimalValue field is set.
     */
    @java.lang.Override
    public boolean hasDecimalValue() {
      return valueCase_ == 20;
    }
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     * @return The decimalValue.
     */
    @java.lang.Override
    public org.blaze.protobuf.ScalarDecimalValue getDecimalValue() {
      if (decimalValueBuilder_ == null) {
        if (valueCase_ == 20) {
          return (org.blaze.protobuf.ScalarDecimalValue) value_;
        }
        return org.blaze.protobuf.ScalarDecimalValue.getDefaultInstance();
      } else {
        if (valueCase_ == 20) {
          return decimalValueBuilder_.getMessage();
        }
        return org.blaze.protobuf.ScalarDecimalValue.getDefaultInstance();
      }
    }
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     */
    public Builder setDecimalValue(org.blaze.protobuf.ScalarDecimalValue value) {
      if (decimalValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
        onChanged();
      } else {
        decimalValueBuilder_.setMessage(value);
      }
      valueCase_ = 20;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     */
    public Builder setDecimalValue(
        org.blaze.protobuf.ScalarDecimalValue.Builder builderForValue) {
      if (decimalValueBuilder_ == null) {
        value_ = builderForValue.build();
        onChanged();
      } else {
        decimalValueBuilder_.setMessage(builderForValue.build());
      }
      valueCase_ = 20;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     */
    public Builder mergeDecimalValue(org.blaze.protobuf.ScalarDecimalValue value) {
      if (decimalValueBuilder_ == null) {
        if (valueCase_ == 20 &&
            value_ != org.blaze.protobuf.ScalarDecimalValue.getDefaultInstance()) {
          value_ = org.blaze.protobuf.ScalarDecimalValue.newBuilder((org.blaze.protobuf.ScalarDecimalValue) value_)
              .mergeFrom(value).buildPartial();
        } else {
          value_ = value;
        }
        onChanged();
      } else {
        if (valueCase_ == 20) {
          decimalValueBuilder_.mergeFrom(value);
        } else {
          decimalValueBuilder_.setMessage(value);
        }
      }
      valueCase_ = 20;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     */
    public Builder clearDecimalValue() {
      if (decimalValueBuilder_ == null) {
        if (valueCase_ == 20) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
      } else {
        if (valueCase_ == 20) {
          valueCase_ = 0;
          value_ = null;
        }
        decimalValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     */
    public org.blaze.protobuf.ScalarDecimalValue.Builder getDecimalValueBuilder() {
      return getDecimalValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     */
    @java.lang.Override
    public org.blaze.protobuf.ScalarDecimalValueOrBuilder getDecimalValueOrBuilder() {
      if ((valueCase_ == 20) && (decimalValueBuilder_ != null)) {
        return decimalValueBuilder_.getMessageOrBuilder();
      } else {
        if (valueCase_ == 20) {
          return (org.blaze.protobuf.ScalarDecimalValue) value_;
        }
        return org.blaze.protobuf.ScalarDecimalValue.getDefaultInstance();
      }
    }
    /**
     * <code>.plan.protobuf.ScalarDecimalValue decimal_value = 20;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.ScalarDecimalValue, org.blaze.protobuf.ScalarDecimalValue.Builder, org.blaze.protobuf.ScalarDecimalValueOrBuilder> 
        getDecimalValueFieldBuilder() {
      if (decimalValueBuilder_ == null) {
        if (!(valueCase_ == 20)) {
          value_ = org.blaze.protobuf.ScalarDecimalValue.getDefaultInstance();
        }
        decimalValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.ScalarDecimalValue, org.blaze.protobuf.ScalarDecimalValue.Builder, org.blaze.protobuf.ScalarDecimalValueOrBuilder>(
                (org.blaze.protobuf.ScalarDecimalValue) value_,
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      valueCase_ = 20;
      onChanged();;
      return decimalValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.ScalarType, org.blaze.protobuf.ScalarType.Builder, org.blaze.protobuf.ScalarTypeOrBuilder> nullValueBuilder_;
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     * @return Whether the nullValue field is set.
     */
    @java.lang.Override
    public boolean hasNullValue() {
      return valueCase_ == 1000;
    }
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     * @return The nullValue.
     */
    @java.lang.Override
    public org.blaze.protobuf.ScalarType getNullValue() {
      if (nullValueBuilder_ == null) {
        if (valueCase_ == 1000) {
          return (org.blaze.protobuf.ScalarType) value_;
        }
        return org.blaze.protobuf.ScalarType.getDefaultInstance();
      } else {
        if (valueCase_ == 1000) {
          return nullValueBuilder_.getMessage();
        }
        return org.blaze.protobuf.ScalarType.getDefaultInstance();
      }
    }
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     */
    public Builder setNullValue(org.blaze.protobuf.ScalarType value) {
      if (nullValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
        onChanged();
      } else {
        nullValueBuilder_.setMessage(value);
      }
      valueCase_ = 1000;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     */
    public Builder setNullValue(
        org.blaze.protobuf.ScalarType.Builder builderForValue) {
      if (nullValueBuilder_ == null) {
        value_ = builderForValue.build();
        onChanged();
      } else {
        nullValueBuilder_.setMessage(builderForValue.build());
      }
      valueCase_ = 1000;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     */
    public Builder mergeNullValue(org.blaze.protobuf.ScalarType value) {
      if (nullValueBuilder_ == null) {
        if (valueCase_ == 1000 &&
            value_ != org.blaze.protobuf.ScalarType.getDefaultInstance()) {
          value_ = org.blaze.protobuf.ScalarType.newBuilder((org.blaze.protobuf.ScalarType) value_)
              .mergeFrom(value).buildPartial();
        } else {
          value_ = value;
        }
        onChanged();
      } else {
        if (valueCase_ == 1000) {
          nullValueBuilder_.mergeFrom(value);
        } else {
          nullValueBuilder_.setMessage(value);
        }
      }
      valueCase_ = 1000;
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     */
    public Builder clearNullValue() {
      if (nullValueBuilder_ == null) {
        if (valueCase_ == 1000) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
      } else {
        if (valueCase_ == 1000) {
          valueCase_ = 0;
          value_ = null;
        }
        nullValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     */
    public org.blaze.protobuf.ScalarType.Builder getNullValueBuilder() {
      return getNullValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     */
    @java.lang.Override
    public org.blaze.protobuf.ScalarTypeOrBuilder getNullValueOrBuilder() {
      if ((valueCase_ == 1000) && (nullValueBuilder_ != null)) {
        return nullValueBuilder_.getMessageOrBuilder();
      } else {
        if (valueCase_ == 1000) {
          return (org.blaze.protobuf.ScalarType) value_;
        }
        return org.blaze.protobuf.ScalarType.getDefaultInstance();
      }
    }
    /**
     * <code>.plan.protobuf.ScalarType null_value = 1000;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.blaze.protobuf.ScalarType, org.blaze.protobuf.ScalarType.Builder, org.blaze.protobuf.ScalarTypeOrBuilder> 
        getNullValueFieldBuilder() {
      if (nullValueBuilder_ == null) {
        if (!(valueCase_ == 1000)) {
          value_ = org.blaze.protobuf.ScalarType.getDefaultInstance();
        }
        nullValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.blaze.protobuf.ScalarType, org.blaze.protobuf.ScalarType.Builder, org.blaze.protobuf.ScalarTypeOrBuilder>(
                (org.blaze.protobuf.ScalarType) value_,
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      valueCase_ = 1000;
      onChanged();;
      return nullValueBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:plan.protobuf.ScalarValue)
  }

  // @@protoc_insertion_point(class_scope:plan.protobuf.ScalarValue)
  private static final org.blaze.protobuf.ScalarValue DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.blaze.protobuf.ScalarValue();
  }

  public static org.blaze.protobuf.ScalarValue getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ScalarValue>
      PARSER = new com.google.protobuf.AbstractParser<ScalarValue>() {
    @java.lang.Override
    public ScalarValue parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ScalarValue> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ScalarValue> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.blaze.protobuf.ScalarValue getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

